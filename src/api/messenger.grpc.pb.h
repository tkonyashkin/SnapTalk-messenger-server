// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: messenger.proto
#ifndef GRPC_messenger_2eproto__INCLUDED
#define GRPC_messenger_2eproto__INCLUDED

#include "messenger.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace messenger {

// Сервисы
class MessengerService final {
 public:
  static constexpr char const* service_full_name() {
    return "messenger.MessengerService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::messenger::ChatMessage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ChatMessage>> AsyncSendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ChatMessage>>(AsyncSendMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ChatMessage>> PrepareAsyncSendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ChatMessage>>(PrepareAsyncSendMessageRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::messenger::GroupChat* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>> AsyncCreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>>(AsyncCreateGroupChatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>> PrepareAsyncCreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>>(PrepareAsyncCreateGroupChatRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::messenger::GroupChat* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>> AsyncUpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>>(AsyncUpdateGroupChatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>> PrepareAsyncUpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>>(PrepareAsyncUpdateGroupChatRaw(context, request, cq));
    }
    virtual ::grpc::Status AssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role& request, ::messenger::Role* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Role>> AsyncAssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Role>>(AsyncAssignRoleToUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Role>> PrepareAsyncAssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Role>>(PrepareAsyncAssignRoleToUserRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::messenger::Reminder* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>> AsyncCreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>>(AsyncCreateReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>> PrepareAsyncCreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>>(PrepareAsyncCreateReminderRaw(context, request, cq));
    }
    virtual ::grpc::Status MarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::messenger::ToDoItem* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>> AsyncMarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>>(AsyncMarkToDoItemCompletedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>> PrepareAsyncMarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>>(PrepareAsyncMarkToDoItemCompletedRaw(context, request, cq));
    }
    // Методы для удаления и редактирования сообщений
    virtual ::grpc::Status DeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::messenger::DeleteMessageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteMessageResponse>> AsyncDeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteMessageResponse>>(AsyncDeleteMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteMessageResponse>> PrepareAsyncDeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteMessageResponse>>(PrepareAsyncDeleteMessageRaw(context, request, cq));
    }
    virtual ::grpc::Status EditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::messenger::EditMessageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::EditMessageResponse>> AsyncEditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::EditMessageResponse>>(AsyncEditMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::EditMessageResponse>> PrepareAsyncEditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::EditMessageResponse>>(PrepareAsyncEditMessageRaw(context, request, cq));
    }
    // Методы для аутентификации и управления пользователями
    virtual ::grpc::Status Register(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::messenger::RegisterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RegisterResponse>> AsyncRegister(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RegisterResponse>>(AsyncRegisterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RegisterResponse>> PrepareAsyncRegister(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RegisterResponse>>(PrepareAsyncRegisterRaw(context, request, cq));
    }
    virtual ::grpc::Status Login(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::messenger::LoginResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LoginResponse>> AsyncLogin(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LoginResponse>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LoginResponse>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LoginResponse>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status Logout(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::messenger::LogoutResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LogoutResponse>> AsyncLogout(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LogoutResponse>>(AsyncLogoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LogoutResponse>> PrepareAsyncLogout(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LogoutResponse>>(PrepareAsyncLogoutRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::messenger::UpdateUserProfileResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateUserProfileResponse>> AsyncUpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateUserProfileResponse>>(AsyncUpdateUserProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateUserProfileResponse>> PrepareAsyncUpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateUserProfileResponse>>(PrepareAsyncUpdateUserProfileRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::messenger::UpdateMessageStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateMessageStatusResponse>> AsyncUpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateMessageStatusResponse>>(AsyncUpdateMessageStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateMessageStatusResponse>> PrepareAsyncUpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateMessageStatusResponse>>(PrepareAsyncUpdateMessageStatusRaw(context, request, cq));
    }
    // Методы для управления контактами
    virtual ::grpc::Status AddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::messenger::AddContactResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddContactResponse>> AsyncAddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddContactResponse>>(AsyncAddContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddContactResponse>> PrepareAsyncAddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddContactResponse>>(PrepareAsyncAddContactRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::messenger::RemoveContactResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveContactResponse>> AsyncRemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveContactResponse>>(AsyncRemoveContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveContactResponse>> PrepareAsyncRemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveContactResponse>>(PrepareAsyncRemoveContactRaw(context, request, cq));
    }
    // Методы для работы с папками чатов
    virtual ::grpc::Status CreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::messenger::CreateChatFolderResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::CreateChatFolderResponse>> AsyncCreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::CreateChatFolderResponse>>(AsyncCreateChatFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::CreateChatFolderResponse>> PrepareAsyncCreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::CreateChatFolderResponse>>(PrepareAsyncCreateChatFolderRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::messenger::UpdateChatFolderResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateChatFolderResponse>> AsyncUpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateChatFolderResponse>>(AsyncUpdateChatFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateChatFolderResponse>> PrepareAsyncUpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateChatFolderResponse>>(PrepareAsyncUpdateChatFolderRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::messenger::DeleteChatFolderResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteChatFolderResponse>> AsyncDeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteChatFolderResponse>>(AsyncDeleteChatFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteChatFolderResponse>> PrepareAsyncDeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteChatFolderResponse>>(PrepareAsyncDeleteChatFolderRaw(context, request, cq));
    }
    virtual ::grpc::Status GetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::messenger::GetFoldersOffsetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersOffsetResponse>> AsyncGetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersOffsetResponse>>(AsyncGetFoldersOffsetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersOffsetResponse>> PrepareAsyncGetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersOffsetResponse>>(PrepareAsyncGetFoldersOffsetRaw(context, request, cq));
    }
    virtual ::grpc::Status GetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::messenger::GetFoldersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersResponse>> AsyncGetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersResponse>>(AsyncGetFoldersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersResponse>> PrepareAsyncGetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersResponse>>(PrepareAsyncGetFoldersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::messenger::ChatFolder>> GetNewFolders(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::messenger::ChatFolder>>(GetNewFoldersRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ChatFolder>> AsyncGetNewFolders(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ChatFolder>>(AsyncGetNewFoldersRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ChatFolder>> PrepareAsyncGetNewFolders(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ChatFolder>>(PrepareAsyncGetNewFoldersRaw(context, request, cq));
    }
    // Поток новых папок
    virtual ::grpc::Status AddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::messenger::AddChatToFolderResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddChatToFolderResponse>> AsyncAddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddChatToFolderResponse>>(AsyncAddChatToFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddChatToFolderResponse>> PrepareAsyncAddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddChatToFolderResponse>>(PrepareAsyncAddChatToFolderRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::messenger::RemoveChatFromFolderResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveChatFromFolderResponse>> AsyncRemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveChatFromFolderResponse>>(AsyncRemoveChatFromFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveChatFromFolderResponse>> PrepareAsyncRemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveChatFromFolderResponse>>(PrepareAsyncRemoveChatFromFolderRaw(context, request, cq));
    }
    // Методы для управления участниками группы
    virtual ::grpc::Status AddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::messenger::AddGroupMemberResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddGroupMemberResponse>> AsyncAddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddGroupMemberResponse>>(AsyncAddGroupMemberRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddGroupMemberResponse>> PrepareAsyncAddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddGroupMemberResponse>>(PrepareAsyncAddGroupMemberRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::messenger::RemoveGroupMemberResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveGroupMemberResponse>> AsyncRemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveGroupMemberResponse>>(AsyncRemoveGroupMemberRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveGroupMemberResponse>> PrepareAsyncRemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveGroupMemberResponse>>(PrepareAsyncRemoveGroupMemberRaw(context, request, cq));
    }
    // Методы для получения списка чатов и сообщений
    // rpc GetGroupChats(string) returns (stream GroupChat);
    // rpc GetChatMessages(string) returns (stream ChatMessage);
    virtual ::grpc::Status GetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::messenger::GetMessagesOffsetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesOffsetResponse>> AsyncGetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesOffsetResponse>>(AsyncGetMessagesOffsetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesOffsetResponse>> PrepareAsyncGetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesOffsetResponse>>(PrepareAsyncGetMessagesOffsetRaw(context, request, cq));
    }
    virtual ::grpc::Status GetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::messenger::GetMessagesConversionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesConversionResponse>> AsyncGetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesConversionResponse>>(AsyncGetMessagesConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesConversionResponse>> PrepareAsyncGetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesConversionResponse>>(PrepareAsyncGetMessagesConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::messenger::ChatMessage>> GetNewMessages(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::messenger::ChatMessage>>(GetNewMessagesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ChatMessage>> AsyncGetNewMessages(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ChatMessage>>(AsyncGetNewMessagesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ChatMessage>> PrepareAsyncGetNewMessages(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ChatMessage>>(PrepareAsyncGetNewMessagesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::messenger::GetGroupChatsOffsetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsOffsetResponse>> AsyncGetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsOffsetResponse>>(AsyncGetGroupChatsOffsetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsOffsetResponse>> PrepareAsyncGetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsOffsetResponse>>(PrepareAsyncGetGroupChatsOffsetRaw(context, request, cq));
    }
    virtual ::grpc::Status GetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::messenger::GetGroupChatsConversionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsConversionResponse>> AsyncGetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsConversionResponse>>(AsyncGetGroupChatsConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsConversionResponse>> PrepareAsyncGetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsConversionResponse>>(PrepareAsyncGetGroupChatsConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::messenger::GroupChat>> GetNewGroupChats(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::messenger::GroupChat>>(GetNewGroupChatsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::GroupChat>> AsyncGetNewGroupChats(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::GroupChat>>(AsyncGetNewGroupChatsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::GroupChat>> PrepareAsyncGetNewGroupChats(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::GroupChat>>(PrepareAsyncGetNewGroupChatsRaw(context, request, cq));
    }
    // Метод для отправки файла
    virtual ::grpc::Status SendFile(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::messenger::FileMessage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::FileMessage>> AsyncSendFile(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::FileMessage>>(AsyncSendFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::FileMessage>> PrepareAsyncSendFile(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::FileMessage>>(PrepareAsyncSendFileRaw(context, request, cq));
    }
    // Методы поиска
    virtual ::grpc::Status SearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::messenger::SearchMessagesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchMessagesResponse>> AsyncSearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchMessagesResponse>>(AsyncSearchMessagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchMessagesResponse>> PrepareAsyncSearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchMessagesResponse>>(PrepareAsyncSearchMessagesRaw(context, request, cq));
    }
    virtual ::grpc::Status SearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::messenger::SearchChatsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchChatsResponse>> AsyncSearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchChatsResponse>>(AsyncSearchChatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchChatsResponse>> PrepareAsyncSearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchChatsResponse>>(PrepareAsyncSearchChatsRaw(context, request, cq));
    }
    // Методы для управления напоминаниями
    virtual ::grpc::Status UpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::messenger::Reminder* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>> AsyncUpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>>(AsyncUpdateReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>> PrepareAsyncUpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>>(PrepareAsyncUpdateReminderRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::messenger::Reminder* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>> AsyncDeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>>(AsyncDeleteReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>> PrepareAsyncDeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>>(PrepareAsyncDeleteReminderRaw(context, request, cq));
    }
    // rpc GetReminders(string) returns (stream Reminder);
    // Методы для управления уведомлениями
    virtual ::grpc::Status UpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::messenger::UpdateNotificationSettingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateNotificationSettingsResponse>> AsyncUpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateNotificationSettingsResponse>>(AsyncUpdateNotificationSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateNotificationSettingsResponse>> PrepareAsyncUpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateNotificationSettingsResponse>>(PrepareAsyncUpdateNotificationSettingsRaw(context, request, cq));
    }
    // Методы для управления списком дел
    virtual ::grpc::Status CreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::messenger::ToDoItem* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>> AsyncCreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>>(AsyncCreateToDoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>> PrepareAsyncCreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>>(PrepareAsyncCreateToDoItemRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::messenger::ToDoItem* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>> AsyncUpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>>(AsyncUpdateToDoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>> PrepareAsyncUpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>>(PrepareAsyncUpdateToDoItemRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::messenger::ToDoItem* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>> AsyncDeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>>(AsyncDeleteToDoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>> PrepareAsyncDeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>>(PrepareAsyncDeleteToDoItemRaw(context, request, cq));
    }
    // rpc GetToDoList(string) returns (stream ToDoItem);
    // Методы для получения задач из списка дел
    virtual ::grpc::Status GetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::messenger::GetToDoItemsOffsetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsOffsetResponse>> AsyncGetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsOffsetResponse>>(AsyncGetToDoItemsOffsetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsOffsetResponse>> PrepareAsyncGetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsOffsetResponse>>(PrepareAsyncGetToDoItemsOffsetRaw(context, request, cq));
    }
    virtual ::grpc::Status GetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::messenger::GetToDoItemsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsResponse>> AsyncGetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsResponse>>(AsyncGetToDoItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsResponse>> PrepareAsyncGetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsResponse>>(PrepareAsyncGetToDoItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::messenger::ToDoItem>> GetNewToDoItems(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::messenger::ToDoItem>>(GetNewToDoItemsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ToDoItem>> AsyncGetNewToDoItems(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ToDoItem>>(AsyncGetNewToDoItemsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ToDoItem>> PrepareAsyncGetNewToDoItems(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::messenger::ToDoItem>>(PrepareAsyncGetNewToDoItemsRaw(context, request, cq));
    }
    // Поток новых задач
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void SendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage* request, ::messenger::ChatMessage* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage* request, ::messenger::ChatMessage* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role* request, ::messenger::Role* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role* request, ::messenger::Role* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void MarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Методы для удаления и редактирования сообщений
      virtual void DeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest* request, ::messenger::DeleteMessageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest* request, ::messenger::DeleteMessageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void EditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest* request, ::messenger::EditMessageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest* request, ::messenger::EditMessageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Методы для аутентификации и управления пользователями
      virtual void Register(::grpc::ClientContext* context, const ::messenger::RegisterRequest* request, ::messenger::RegisterResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Register(::grpc::ClientContext* context, const ::messenger::RegisterRequest* request, ::messenger::RegisterResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::messenger::LoginRequest* request, ::messenger::LoginResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::messenger::LoginRequest* request, ::messenger::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Logout(::grpc::ClientContext* context, const ::messenger::LogoutRequest* request, ::messenger::LogoutResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Logout(::grpc::ClientContext* context, const ::messenger::LogoutRequest* request, ::messenger::LogoutResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest* request, ::messenger::UpdateUserProfileResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest* request, ::messenger::UpdateUserProfileResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest* request, ::messenger::UpdateMessageStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest* request, ::messenger::UpdateMessageStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Методы для управления контактами
      virtual void AddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest* request, ::messenger::AddContactResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest* request, ::messenger::AddContactResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest* request, ::messenger::RemoveContactResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest* request, ::messenger::RemoveContactResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Методы для работы с папками чатов
      virtual void CreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest* request, ::messenger::CreateChatFolderResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest* request, ::messenger::CreateChatFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest* request, ::messenger::UpdateChatFolderResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest* request, ::messenger::UpdateChatFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest* request, ::messenger::DeleteChatFolderResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest* request, ::messenger::DeleteChatFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest* request, ::messenger::GetFoldersOffsetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest* request, ::messenger::GetFoldersOffsetResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest* request, ::messenger::GetFoldersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest* request, ::messenger::GetFoldersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetNewFolders(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest* request, ::grpc::ClientReadReactor< ::messenger::ChatFolder>* reactor) = 0;
      // Поток новых папок
      virtual void AddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest* request, ::messenger::AddChatToFolderResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest* request, ::messenger::AddChatToFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest* request, ::messenger::RemoveChatFromFolderResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest* request, ::messenger::RemoveChatFromFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Методы для управления участниками группы
      virtual void AddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest* request, ::messenger::AddGroupMemberResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest* request, ::messenger::AddGroupMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest* request, ::messenger::RemoveGroupMemberResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest* request, ::messenger::RemoveGroupMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Методы для получения списка чатов и сообщений
      // rpc GetGroupChats(string) returns (stream GroupChat);
      // rpc GetChatMessages(string) returns (stream ChatMessage);
      virtual void GetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest* request, ::messenger::GetMessagesOffsetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest* request, ::messenger::GetMessagesOffsetResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest* request, ::messenger::GetMessagesConversionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest* request, ::messenger::GetMessagesConversionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetNewMessages(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest* request, ::grpc::ClientReadReactor< ::messenger::ChatMessage>* reactor) = 0;
      virtual void GetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest* request, ::messenger::GetGroupChatsOffsetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest* request, ::messenger::GetGroupChatsOffsetResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest* request, ::messenger::GetGroupChatsConversionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest* request, ::messenger::GetGroupChatsConversionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetNewGroupChats(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest* request, ::grpc::ClientReadReactor< ::messenger::GroupChat>* reactor) = 0;
      // Метод для отправки файла
      virtual void SendFile(::grpc::ClientContext* context, const ::messenger::FileMessage* request, ::messenger::FileMessage* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendFile(::grpc::ClientContext* context, const ::messenger::FileMessage* request, ::messenger::FileMessage* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Методы поиска
      virtual void SearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchMessagesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchMessagesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchChatsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchChatsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Методы для управления напоминаниями
      virtual void UpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // rpc GetReminders(string) returns (stream Reminder);
      // Методы для управления уведомлениями
      virtual void UpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest* request, ::messenger::UpdateNotificationSettingsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest* request, ::messenger::UpdateNotificationSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Методы для управления списком дел
      virtual void CreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // rpc GetToDoList(string) returns (stream ToDoItem);
      // Методы для получения задач из списка дел
      virtual void GetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest* request, ::messenger::GetToDoItemsOffsetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest* request, ::messenger::GetToDoItemsOffsetResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest* request, ::messenger::GetToDoItemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest* request, ::messenger::GetToDoItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetNewToDoItems(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest* request, ::grpc::ClientReadReactor< ::messenger::ToDoItem>* reactor) = 0;
      // Поток новых задач
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ChatMessage>* AsyncSendMessageRaw(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ChatMessage>* PrepareAsyncSendMessageRaw(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>* AsyncCreateGroupChatRaw(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>* PrepareAsyncCreateGroupChatRaw(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>* AsyncUpdateGroupChatRaw(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GroupChat>* PrepareAsyncUpdateGroupChatRaw(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Role>* AsyncAssignRoleToUserRaw(::grpc::ClientContext* context, const ::messenger::Role& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Role>* PrepareAsyncAssignRoleToUserRaw(::grpc::ClientContext* context, const ::messenger::Role& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>* AsyncCreateReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>* PrepareAsyncCreateReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>* AsyncMarkToDoItemCompletedRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>* PrepareAsyncMarkToDoItemCompletedRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteMessageResponse>* AsyncDeleteMessageRaw(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteMessageResponse>* PrepareAsyncDeleteMessageRaw(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::EditMessageResponse>* AsyncEditMessageRaw(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::EditMessageResponse>* PrepareAsyncEditMessageRaw(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RegisterResponse>* AsyncRegisterRaw(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RegisterResponse>* PrepareAsyncRegisterRaw(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LoginResponse>* AsyncLoginRaw(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LoginResponse>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LogoutResponse>* AsyncLogoutRaw(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::LogoutResponse>* PrepareAsyncLogoutRaw(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateUserProfileResponse>* AsyncUpdateUserProfileRaw(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateUserProfileResponse>* PrepareAsyncUpdateUserProfileRaw(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateMessageStatusResponse>* AsyncUpdateMessageStatusRaw(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateMessageStatusResponse>* PrepareAsyncUpdateMessageStatusRaw(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddContactResponse>* AsyncAddContactRaw(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddContactResponse>* PrepareAsyncAddContactRaw(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveContactResponse>* AsyncRemoveContactRaw(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveContactResponse>* PrepareAsyncRemoveContactRaw(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::CreateChatFolderResponse>* AsyncCreateChatFolderRaw(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::CreateChatFolderResponse>* PrepareAsyncCreateChatFolderRaw(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateChatFolderResponse>* AsyncUpdateChatFolderRaw(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateChatFolderResponse>* PrepareAsyncUpdateChatFolderRaw(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteChatFolderResponse>* AsyncDeleteChatFolderRaw(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::DeleteChatFolderResponse>* PrepareAsyncDeleteChatFolderRaw(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersOffsetResponse>* AsyncGetFoldersOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersOffsetResponse>* PrepareAsyncGetFoldersOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersResponse>* AsyncGetFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetFoldersResponse>* PrepareAsyncGetFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::messenger::ChatFolder>* GetNewFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::messenger::ChatFolder>* AsyncGetNewFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::messenger::ChatFolder>* PrepareAsyncGetNewFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddChatToFolderResponse>* AsyncAddChatToFolderRaw(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddChatToFolderResponse>* PrepareAsyncAddChatToFolderRaw(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveChatFromFolderResponse>* AsyncRemoveChatFromFolderRaw(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveChatFromFolderResponse>* PrepareAsyncRemoveChatFromFolderRaw(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddGroupMemberResponse>* AsyncAddGroupMemberRaw(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::AddGroupMemberResponse>* PrepareAsyncAddGroupMemberRaw(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveGroupMemberResponse>* AsyncRemoveGroupMemberRaw(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::RemoveGroupMemberResponse>* PrepareAsyncRemoveGroupMemberRaw(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesOffsetResponse>* AsyncGetMessagesOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesOffsetResponse>* PrepareAsyncGetMessagesOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesConversionResponse>* AsyncGetMessagesConversionRaw(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetMessagesConversionResponse>* PrepareAsyncGetMessagesConversionRaw(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::messenger::ChatMessage>* GetNewMessagesRaw(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::messenger::ChatMessage>* AsyncGetNewMessagesRaw(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::messenger::ChatMessage>* PrepareAsyncGetNewMessagesRaw(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsOffsetResponse>* AsyncGetGroupChatsOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsOffsetResponse>* PrepareAsyncGetGroupChatsOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsConversionResponse>* AsyncGetGroupChatsConversionRaw(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetGroupChatsConversionResponse>* PrepareAsyncGetGroupChatsConversionRaw(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::messenger::GroupChat>* GetNewGroupChatsRaw(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::messenger::GroupChat>* AsyncGetNewGroupChatsRaw(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::messenger::GroupChat>* PrepareAsyncGetNewGroupChatsRaw(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::FileMessage>* AsyncSendFileRaw(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::FileMessage>* PrepareAsyncSendFileRaw(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchMessagesResponse>* AsyncSearchMessagesRaw(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchMessagesResponse>* PrepareAsyncSearchMessagesRaw(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchChatsResponse>* AsyncSearchChatsRaw(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::SearchChatsResponse>* PrepareAsyncSearchChatsRaw(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>* AsyncUpdateReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>* PrepareAsyncUpdateReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>* AsyncDeleteReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::Reminder>* PrepareAsyncDeleteReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateNotificationSettingsResponse>* AsyncUpdateNotificationSettingsRaw(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::UpdateNotificationSettingsResponse>* PrepareAsyncUpdateNotificationSettingsRaw(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>* AsyncCreateToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>* PrepareAsyncCreateToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>* AsyncUpdateToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>* PrepareAsyncUpdateToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>* AsyncDeleteToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::ToDoItem>* PrepareAsyncDeleteToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsOffsetResponse>* AsyncGetToDoItemsOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsOffsetResponse>* PrepareAsyncGetToDoItemsOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsResponse>* AsyncGetToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::messenger::GetToDoItemsResponse>* PrepareAsyncGetToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::messenger::ToDoItem>* GetNewToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::messenger::ToDoItem>* AsyncGetNewToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::messenger::ToDoItem>* PrepareAsyncGetNewToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::messenger::ChatMessage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ChatMessage>> AsyncSendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ChatMessage>>(AsyncSendMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ChatMessage>> PrepareAsyncSendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ChatMessage>>(PrepareAsyncSendMessageRaw(context, request, cq));
    }
    ::grpc::Status CreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::messenger::GroupChat* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>> AsyncCreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>>(AsyncCreateGroupChatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>> PrepareAsyncCreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>>(PrepareAsyncCreateGroupChatRaw(context, request, cq));
    }
    ::grpc::Status UpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::messenger::GroupChat* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>> AsyncUpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>>(AsyncUpdateGroupChatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>> PrepareAsyncUpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>>(PrepareAsyncUpdateGroupChatRaw(context, request, cq));
    }
    ::grpc::Status AssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role& request, ::messenger::Role* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Role>> AsyncAssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Role>>(AsyncAssignRoleToUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Role>> PrepareAsyncAssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Role>>(PrepareAsyncAssignRoleToUserRaw(context, request, cq));
    }
    ::grpc::Status CreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::messenger::Reminder* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>> AsyncCreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>>(AsyncCreateReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>> PrepareAsyncCreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>>(PrepareAsyncCreateReminderRaw(context, request, cq));
    }
    ::grpc::Status MarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::messenger::ToDoItem* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>> AsyncMarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>>(AsyncMarkToDoItemCompletedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>> PrepareAsyncMarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>>(PrepareAsyncMarkToDoItemCompletedRaw(context, request, cq));
    }
    ::grpc::Status DeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::messenger::DeleteMessageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::DeleteMessageResponse>> AsyncDeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::DeleteMessageResponse>>(AsyncDeleteMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::DeleteMessageResponse>> PrepareAsyncDeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::DeleteMessageResponse>>(PrepareAsyncDeleteMessageRaw(context, request, cq));
    }
    ::grpc::Status EditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::messenger::EditMessageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::EditMessageResponse>> AsyncEditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::EditMessageResponse>>(AsyncEditMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::EditMessageResponse>> PrepareAsyncEditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::EditMessageResponse>>(PrepareAsyncEditMessageRaw(context, request, cq));
    }
    ::grpc::Status Register(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::messenger::RegisterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RegisterResponse>> AsyncRegister(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RegisterResponse>>(AsyncRegisterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RegisterResponse>> PrepareAsyncRegister(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RegisterResponse>>(PrepareAsyncRegisterRaw(context, request, cq));
    }
    ::grpc::Status Login(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::messenger::LoginResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::LoginResponse>> AsyncLogin(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::LoginResponse>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::LoginResponse>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::LoginResponse>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    ::grpc::Status Logout(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::messenger::LogoutResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::LogoutResponse>> AsyncLogout(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::LogoutResponse>>(AsyncLogoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::LogoutResponse>> PrepareAsyncLogout(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::LogoutResponse>>(PrepareAsyncLogoutRaw(context, request, cq));
    }
    ::grpc::Status UpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::messenger::UpdateUserProfileResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateUserProfileResponse>> AsyncUpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateUserProfileResponse>>(AsyncUpdateUserProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateUserProfileResponse>> PrepareAsyncUpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateUserProfileResponse>>(PrepareAsyncUpdateUserProfileRaw(context, request, cq));
    }
    ::grpc::Status UpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::messenger::UpdateMessageStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateMessageStatusResponse>> AsyncUpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateMessageStatusResponse>>(AsyncUpdateMessageStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateMessageStatusResponse>> PrepareAsyncUpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateMessageStatusResponse>>(PrepareAsyncUpdateMessageStatusRaw(context, request, cq));
    }
    ::grpc::Status AddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::messenger::AddContactResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddContactResponse>> AsyncAddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddContactResponse>>(AsyncAddContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddContactResponse>> PrepareAsyncAddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddContactResponse>>(PrepareAsyncAddContactRaw(context, request, cq));
    }
    ::grpc::Status RemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::messenger::RemoveContactResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveContactResponse>> AsyncRemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveContactResponse>>(AsyncRemoveContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveContactResponse>> PrepareAsyncRemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveContactResponse>>(PrepareAsyncRemoveContactRaw(context, request, cq));
    }
    ::grpc::Status CreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::messenger::CreateChatFolderResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::CreateChatFolderResponse>> AsyncCreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::CreateChatFolderResponse>>(AsyncCreateChatFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::CreateChatFolderResponse>> PrepareAsyncCreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::CreateChatFolderResponse>>(PrepareAsyncCreateChatFolderRaw(context, request, cq));
    }
    ::grpc::Status UpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::messenger::UpdateChatFolderResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateChatFolderResponse>> AsyncUpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateChatFolderResponse>>(AsyncUpdateChatFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateChatFolderResponse>> PrepareAsyncUpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateChatFolderResponse>>(PrepareAsyncUpdateChatFolderRaw(context, request, cq));
    }
    ::grpc::Status DeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::messenger::DeleteChatFolderResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::DeleteChatFolderResponse>> AsyncDeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::DeleteChatFolderResponse>>(AsyncDeleteChatFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::DeleteChatFolderResponse>> PrepareAsyncDeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::DeleteChatFolderResponse>>(PrepareAsyncDeleteChatFolderRaw(context, request, cq));
    }
    ::grpc::Status GetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::messenger::GetFoldersOffsetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersOffsetResponse>> AsyncGetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersOffsetResponse>>(AsyncGetFoldersOffsetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersOffsetResponse>> PrepareAsyncGetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersOffsetResponse>>(PrepareAsyncGetFoldersOffsetRaw(context, request, cq));
    }
    ::grpc::Status GetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::messenger::GetFoldersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersResponse>> AsyncGetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersResponse>>(AsyncGetFoldersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersResponse>> PrepareAsyncGetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersResponse>>(PrepareAsyncGetFoldersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::messenger::ChatFolder>> GetNewFolders(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::messenger::ChatFolder>>(GetNewFoldersRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ChatFolder>> AsyncGetNewFolders(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ChatFolder>>(AsyncGetNewFoldersRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ChatFolder>> PrepareAsyncGetNewFolders(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ChatFolder>>(PrepareAsyncGetNewFoldersRaw(context, request, cq));
    }
    ::grpc::Status AddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::messenger::AddChatToFolderResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddChatToFolderResponse>> AsyncAddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddChatToFolderResponse>>(AsyncAddChatToFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddChatToFolderResponse>> PrepareAsyncAddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddChatToFolderResponse>>(PrepareAsyncAddChatToFolderRaw(context, request, cq));
    }
    ::grpc::Status RemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::messenger::RemoveChatFromFolderResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveChatFromFolderResponse>> AsyncRemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveChatFromFolderResponse>>(AsyncRemoveChatFromFolderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveChatFromFolderResponse>> PrepareAsyncRemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveChatFromFolderResponse>>(PrepareAsyncRemoveChatFromFolderRaw(context, request, cq));
    }
    ::grpc::Status AddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::messenger::AddGroupMemberResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddGroupMemberResponse>> AsyncAddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddGroupMemberResponse>>(AsyncAddGroupMemberRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddGroupMemberResponse>> PrepareAsyncAddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::AddGroupMemberResponse>>(PrepareAsyncAddGroupMemberRaw(context, request, cq));
    }
    ::grpc::Status RemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::messenger::RemoveGroupMemberResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveGroupMemberResponse>> AsyncRemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveGroupMemberResponse>>(AsyncRemoveGroupMemberRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveGroupMemberResponse>> PrepareAsyncRemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::RemoveGroupMemberResponse>>(PrepareAsyncRemoveGroupMemberRaw(context, request, cq));
    }
    ::grpc::Status GetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::messenger::GetMessagesOffsetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesOffsetResponse>> AsyncGetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesOffsetResponse>>(AsyncGetMessagesOffsetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesOffsetResponse>> PrepareAsyncGetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesOffsetResponse>>(PrepareAsyncGetMessagesOffsetRaw(context, request, cq));
    }
    ::grpc::Status GetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::messenger::GetMessagesConversionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesConversionResponse>> AsyncGetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesConversionResponse>>(AsyncGetMessagesConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesConversionResponse>> PrepareAsyncGetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesConversionResponse>>(PrepareAsyncGetMessagesConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::messenger::ChatMessage>> GetNewMessages(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::messenger::ChatMessage>>(GetNewMessagesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ChatMessage>> AsyncGetNewMessages(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ChatMessage>>(AsyncGetNewMessagesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ChatMessage>> PrepareAsyncGetNewMessages(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ChatMessage>>(PrepareAsyncGetNewMessagesRaw(context, request, cq));
    }
    ::grpc::Status GetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::messenger::GetGroupChatsOffsetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsOffsetResponse>> AsyncGetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsOffsetResponse>>(AsyncGetGroupChatsOffsetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsOffsetResponse>> PrepareAsyncGetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsOffsetResponse>>(PrepareAsyncGetGroupChatsOffsetRaw(context, request, cq));
    }
    ::grpc::Status GetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::messenger::GetGroupChatsConversionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsConversionResponse>> AsyncGetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsConversionResponse>>(AsyncGetGroupChatsConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsConversionResponse>> PrepareAsyncGetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsConversionResponse>>(PrepareAsyncGetGroupChatsConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::messenger::GroupChat>> GetNewGroupChats(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::messenger::GroupChat>>(GetNewGroupChatsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::GroupChat>> AsyncGetNewGroupChats(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::GroupChat>>(AsyncGetNewGroupChatsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::GroupChat>> PrepareAsyncGetNewGroupChats(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::GroupChat>>(PrepareAsyncGetNewGroupChatsRaw(context, request, cq));
    }
    ::grpc::Status SendFile(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::messenger::FileMessage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::FileMessage>> AsyncSendFile(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::FileMessage>>(AsyncSendFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::FileMessage>> PrepareAsyncSendFile(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::FileMessage>>(PrepareAsyncSendFileRaw(context, request, cq));
    }
    ::grpc::Status SearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::messenger::SearchMessagesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::SearchMessagesResponse>> AsyncSearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::SearchMessagesResponse>>(AsyncSearchMessagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::SearchMessagesResponse>> PrepareAsyncSearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::SearchMessagesResponse>>(PrepareAsyncSearchMessagesRaw(context, request, cq));
    }
    ::grpc::Status SearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::messenger::SearchChatsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::SearchChatsResponse>> AsyncSearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::SearchChatsResponse>>(AsyncSearchChatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::SearchChatsResponse>> PrepareAsyncSearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::SearchChatsResponse>>(PrepareAsyncSearchChatsRaw(context, request, cq));
    }
    ::grpc::Status UpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::messenger::Reminder* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>> AsyncUpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>>(AsyncUpdateReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>> PrepareAsyncUpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>>(PrepareAsyncUpdateReminderRaw(context, request, cq));
    }
    ::grpc::Status DeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::messenger::Reminder* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>> AsyncDeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>>(AsyncDeleteReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>> PrepareAsyncDeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>>(PrepareAsyncDeleteReminderRaw(context, request, cq));
    }
    ::grpc::Status UpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::messenger::UpdateNotificationSettingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateNotificationSettingsResponse>> AsyncUpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateNotificationSettingsResponse>>(AsyncUpdateNotificationSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateNotificationSettingsResponse>> PrepareAsyncUpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::UpdateNotificationSettingsResponse>>(PrepareAsyncUpdateNotificationSettingsRaw(context, request, cq));
    }
    ::grpc::Status CreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::messenger::ToDoItem* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>> AsyncCreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>>(AsyncCreateToDoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>> PrepareAsyncCreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>>(PrepareAsyncCreateToDoItemRaw(context, request, cq));
    }
    ::grpc::Status UpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::messenger::ToDoItem* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>> AsyncUpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>>(AsyncUpdateToDoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>> PrepareAsyncUpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>>(PrepareAsyncUpdateToDoItemRaw(context, request, cq));
    }
    ::grpc::Status DeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::messenger::ToDoItem* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>> AsyncDeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>>(AsyncDeleteToDoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>> PrepareAsyncDeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>>(PrepareAsyncDeleteToDoItemRaw(context, request, cq));
    }
    ::grpc::Status GetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::messenger::GetToDoItemsOffsetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsOffsetResponse>> AsyncGetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsOffsetResponse>>(AsyncGetToDoItemsOffsetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsOffsetResponse>> PrepareAsyncGetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsOffsetResponse>>(PrepareAsyncGetToDoItemsOffsetRaw(context, request, cq));
    }
    ::grpc::Status GetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::messenger::GetToDoItemsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsResponse>> AsyncGetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsResponse>>(AsyncGetToDoItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsResponse>> PrepareAsyncGetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsResponse>>(PrepareAsyncGetToDoItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::messenger::ToDoItem>> GetNewToDoItems(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::messenger::ToDoItem>>(GetNewToDoItemsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ToDoItem>> AsyncGetNewToDoItems(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ToDoItem>>(AsyncGetNewToDoItemsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ToDoItem>> PrepareAsyncGetNewToDoItems(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::messenger::ToDoItem>>(PrepareAsyncGetNewToDoItemsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage* request, ::messenger::ChatMessage* response, std::function<void(::grpc::Status)>) override;
      void SendMessage(::grpc::ClientContext* context, const ::messenger::SentMessage* request, ::messenger::ChatMessage* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response, std::function<void(::grpc::Status)>) override;
      void CreateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response, std::function<void(::grpc::Status)>) override;
      void UpdateGroupChat(::grpc::ClientContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role* request, ::messenger::Role* response, std::function<void(::grpc::Status)>) override;
      void AssignRoleToUser(::grpc::ClientContext* context, const ::messenger::Role* request, ::messenger::Role* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, std::function<void(::grpc::Status)>) override;
      void CreateReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, std::function<void(::grpc::Status)>) override;
      void MarkToDoItemCompleted(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest* request, ::messenger::DeleteMessageResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteMessage(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest* request, ::messenger::DeleteMessageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void EditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest* request, ::messenger::EditMessageResponse* response, std::function<void(::grpc::Status)>) override;
      void EditMessage(::grpc::ClientContext* context, const ::messenger::EditMessageRequest* request, ::messenger::EditMessageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Register(::grpc::ClientContext* context, const ::messenger::RegisterRequest* request, ::messenger::RegisterResponse* response, std::function<void(::grpc::Status)>) override;
      void Register(::grpc::ClientContext* context, const ::messenger::RegisterRequest* request, ::messenger::RegisterResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Login(::grpc::ClientContext* context, const ::messenger::LoginRequest* request, ::messenger::LoginResponse* response, std::function<void(::grpc::Status)>) override;
      void Login(::grpc::ClientContext* context, const ::messenger::LoginRequest* request, ::messenger::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Logout(::grpc::ClientContext* context, const ::messenger::LogoutRequest* request, ::messenger::LogoutResponse* response, std::function<void(::grpc::Status)>) override;
      void Logout(::grpc::ClientContext* context, const ::messenger::LogoutRequest* request, ::messenger::LogoutResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest* request, ::messenger::UpdateUserProfileResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateUserProfile(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest* request, ::messenger::UpdateUserProfileResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest* request, ::messenger::UpdateMessageStatusResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateMessageStatus(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest* request, ::messenger::UpdateMessageStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest* request, ::messenger::AddContactResponse* response, std::function<void(::grpc::Status)>) override;
      void AddContact(::grpc::ClientContext* context, const ::messenger::AddContactRequest* request, ::messenger::AddContactResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest* request, ::messenger::RemoveContactResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveContact(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest* request, ::messenger::RemoveContactResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest* request, ::messenger::CreateChatFolderResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateChatFolder(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest* request, ::messenger::CreateChatFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest* request, ::messenger::UpdateChatFolderResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateChatFolder(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest* request, ::messenger::UpdateChatFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest* request, ::messenger::DeleteChatFolderResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteChatFolder(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest* request, ::messenger::DeleteChatFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest* request, ::messenger::GetFoldersOffsetResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFoldersOffset(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest* request, ::messenger::GetFoldersOffsetResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest* request, ::messenger::GetFoldersResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFolders(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest* request, ::messenger::GetFoldersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNewFolders(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest* request, ::grpc::ClientReadReactor< ::messenger::ChatFolder>* reactor) override;
      void AddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest* request, ::messenger::AddChatToFolderResponse* response, std::function<void(::grpc::Status)>) override;
      void AddChatToFolder(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest* request, ::messenger::AddChatToFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest* request, ::messenger::RemoveChatFromFolderResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveChatFromFolder(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest* request, ::messenger::RemoveChatFromFolderResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest* request, ::messenger::AddGroupMemberResponse* response, std::function<void(::grpc::Status)>) override;
      void AddGroupMember(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest* request, ::messenger::AddGroupMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest* request, ::messenger::RemoveGroupMemberResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveGroupMember(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest* request, ::messenger::RemoveGroupMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest* request, ::messenger::GetMessagesOffsetResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMessagesOffset(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest* request, ::messenger::GetMessagesOffsetResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest* request, ::messenger::GetMessagesConversionResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMessagesConversion(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest* request, ::messenger::GetMessagesConversionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNewMessages(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest* request, ::grpc::ClientReadReactor< ::messenger::ChatMessage>* reactor) override;
      void GetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest* request, ::messenger::GetGroupChatsOffsetResponse* response, std::function<void(::grpc::Status)>) override;
      void GetGroupChatsOffset(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest* request, ::messenger::GetGroupChatsOffsetResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest* request, ::messenger::GetGroupChatsConversionResponse* response, std::function<void(::grpc::Status)>) override;
      void GetGroupChatsConversion(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest* request, ::messenger::GetGroupChatsConversionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNewGroupChats(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest* request, ::grpc::ClientReadReactor< ::messenger::GroupChat>* reactor) override;
      void SendFile(::grpc::ClientContext* context, const ::messenger::FileMessage* request, ::messenger::FileMessage* response, std::function<void(::grpc::Status)>) override;
      void SendFile(::grpc::ClientContext* context, const ::messenger::FileMessage* request, ::messenger::FileMessage* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchMessagesResponse* response, std::function<void(::grpc::Status)>) override;
      void SearchMessages(::grpc::ClientContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchMessagesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchChatsResponse* response, std::function<void(::grpc::Status)>) override;
      void SearchChats(::grpc::ClientContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchChatsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, std::function<void(::grpc::Status)>) override;
      void UpdateReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, std::function<void(::grpc::Status)>) override;
      void DeleteReminder(::grpc::ClientContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest* request, ::messenger::UpdateNotificationSettingsResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateNotificationSettings(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest* request, ::messenger::UpdateNotificationSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, std::function<void(::grpc::Status)>) override;
      void CreateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, std::function<void(::grpc::Status)>) override;
      void UpdateToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, std::function<void(::grpc::Status)>) override;
      void DeleteToDoItem(::grpc::ClientContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest* request, ::messenger::GetToDoItemsOffsetResponse* response, std::function<void(::grpc::Status)>) override;
      void GetToDoItemsOffset(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest* request, ::messenger::GetToDoItemsOffsetResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest* request, ::messenger::GetToDoItemsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetToDoItems(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest* request, ::messenger::GetToDoItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNewToDoItems(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest* request, ::grpc::ClientReadReactor< ::messenger::ToDoItem>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::messenger::ChatMessage>* AsyncSendMessageRaw(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::ChatMessage>* PrepareAsyncSendMessageRaw(::grpc::ClientContext* context, const ::messenger::SentMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>* AsyncCreateGroupChatRaw(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>* PrepareAsyncCreateGroupChatRaw(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>* AsyncUpdateGroupChatRaw(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GroupChat>* PrepareAsyncUpdateGroupChatRaw(::grpc::ClientContext* context, const ::messenger::GroupChat& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::Role>* AsyncAssignRoleToUserRaw(::grpc::ClientContext* context, const ::messenger::Role& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::Role>* PrepareAsyncAssignRoleToUserRaw(::grpc::ClientContext* context, const ::messenger::Role& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>* AsyncCreateReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>* PrepareAsyncCreateReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>* AsyncMarkToDoItemCompletedRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>* PrepareAsyncMarkToDoItemCompletedRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::DeleteMessageResponse>* AsyncDeleteMessageRaw(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::DeleteMessageResponse>* PrepareAsyncDeleteMessageRaw(::grpc::ClientContext* context, const ::messenger::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::EditMessageResponse>* AsyncEditMessageRaw(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::EditMessageResponse>* PrepareAsyncEditMessageRaw(::grpc::ClientContext* context, const ::messenger::EditMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::RegisterResponse>* AsyncRegisterRaw(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::RegisterResponse>* PrepareAsyncRegisterRaw(::grpc::ClientContext* context, const ::messenger::RegisterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::LoginResponse>* AsyncLoginRaw(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::LoginResponse>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::messenger::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::LogoutResponse>* AsyncLogoutRaw(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::LogoutResponse>* PrepareAsyncLogoutRaw(::grpc::ClientContext* context, const ::messenger::LogoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::UpdateUserProfileResponse>* AsyncUpdateUserProfileRaw(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::UpdateUserProfileResponse>* PrepareAsyncUpdateUserProfileRaw(::grpc::ClientContext* context, const ::messenger::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::UpdateMessageStatusResponse>* AsyncUpdateMessageStatusRaw(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::UpdateMessageStatusResponse>* PrepareAsyncUpdateMessageStatusRaw(::grpc::ClientContext* context, const ::messenger::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::AddContactResponse>* AsyncAddContactRaw(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::AddContactResponse>* PrepareAsyncAddContactRaw(::grpc::ClientContext* context, const ::messenger::AddContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::RemoveContactResponse>* AsyncRemoveContactRaw(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::RemoveContactResponse>* PrepareAsyncRemoveContactRaw(::grpc::ClientContext* context, const ::messenger::RemoveContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::CreateChatFolderResponse>* AsyncCreateChatFolderRaw(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::CreateChatFolderResponse>* PrepareAsyncCreateChatFolderRaw(::grpc::ClientContext* context, const ::messenger::CreateChatFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::UpdateChatFolderResponse>* AsyncUpdateChatFolderRaw(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::UpdateChatFolderResponse>* PrepareAsyncUpdateChatFolderRaw(::grpc::ClientContext* context, const ::messenger::UpdateChatFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::DeleteChatFolderResponse>* AsyncDeleteChatFolderRaw(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::DeleteChatFolderResponse>* PrepareAsyncDeleteChatFolderRaw(::grpc::ClientContext* context, const ::messenger::DeleteChatFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersOffsetResponse>* AsyncGetFoldersOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersOffsetResponse>* PrepareAsyncGetFoldersOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetFoldersOffsetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersResponse>* AsyncGetFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetFoldersResponse>* PrepareAsyncGetFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetFoldersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::messenger::ChatFolder>* GetNewFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request) override;
    ::grpc::ClientAsyncReader< ::messenger::ChatFolder>* AsyncGetNewFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::messenger::ChatFolder>* PrepareAsyncGetNewFoldersRaw(::grpc::ClientContext* context, const ::messenger::GetNewFoldersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::AddChatToFolderResponse>* AsyncAddChatToFolderRaw(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::AddChatToFolderResponse>* PrepareAsyncAddChatToFolderRaw(::grpc::ClientContext* context, const ::messenger::AddChatToFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::RemoveChatFromFolderResponse>* AsyncRemoveChatFromFolderRaw(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::RemoveChatFromFolderResponse>* PrepareAsyncRemoveChatFromFolderRaw(::grpc::ClientContext* context, const ::messenger::RemoveChatFromFolderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::AddGroupMemberResponse>* AsyncAddGroupMemberRaw(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::AddGroupMemberResponse>* PrepareAsyncAddGroupMemberRaw(::grpc::ClientContext* context, const ::messenger::AddGroupMemberRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::RemoveGroupMemberResponse>* AsyncRemoveGroupMemberRaw(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::RemoveGroupMemberResponse>* PrepareAsyncRemoveGroupMemberRaw(::grpc::ClientContext* context, const ::messenger::RemoveGroupMemberRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesOffsetResponse>* AsyncGetMessagesOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesOffsetResponse>* PrepareAsyncGetMessagesOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetMessagesOffsetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesConversionResponse>* AsyncGetMessagesConversionRaw(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetMessagesConversionResponse>* PrepareAsyncGetMessagesConversionRaw(::grpc::ClientContext* context, const ::messenger::GetMessagesConversionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::messenger::ChatMessage>* GetNewMessagesRaw(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request) override;
    ::grpc::ClientAsyncReader< ::messenger::ChatMessage>* AsyncGetNewMessagesRaw(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::messenger::ChatMessage>* PrepareAsyncGetNewMessagesRaw(::grpc::ClientContext* context, const ::messenger::GetNewMessagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsOffsetResponse>* AsyncGetGroupChatsOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsOffsetResponse>* PrepareAsyncGetGroupChatsOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetGroupChatsOffsetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsConversionResponse>* AsyncGetGroupChatsConversionRaw(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetGroupChatsConversionResponse>* PrepareAsyncGetGroupChatsConversionRaw(::grpc::ClientContext* context, const ::messenger::GetGroupChatsConversionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::messenger::GroupChat>* GetNewGroupChatsRaw(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request) override;
    ::grpc::ClientAsyncReader< ::messenger::GroupChat>* AsyncGetNewGroupChatsRaw(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::messenger::GroupChat>* PrepareAsyncGetNewGroupChatsRaw(::grpc::ClientContext* context, const ::messenger::GetNewGroupChatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::FileMessage>* AsyncSendFileRaw(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::FileMessage>* PrepareAsyncSendFileRaw(::grpc::ClientContext* context, const ::messenger::FileMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::SearchMessagesResponse>* AsyncSearchMessagesRaw(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::SearchMessagesResponse>* PrepareAsyncSearchMessagesRaw(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::SearchChatsResponse>* AsyncSearchChatsRaw(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::SearchChatsResponse>* PrepareAsyncSearchChatsRaw(::grpc::ClientContext* context, const ::messenger::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>* AsyncUpdateReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>* PrepareAsyncUpdateReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>* AsyncDeleteReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::Reminder>* PrepareAsyncDeleteReminderRaw(::grpc::ClientContext* context, const ::messenger::Reminder& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::UpdateNotificationSettingsResponse>* AsyncUpdateNotificationSettingsRaw(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::UpdateNotificationSettingsResponse>* PrepareAsyncUpdateNotificationSettingsRaw(::grpc::ClientContext* context, const ::messenger::UpdateNotificationSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>* AsyncCreateToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>* PrepareAsyncCreateToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>* AsyncUpdateToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>* PrepareAsyncUpdateToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>* AsyncDeleteToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::ToDoItem>* PrepareAsyncDeleteToDoItemRaw(::grpc::ClientContext* context, const ::messenger::ToDoItem& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsOffsetResponse>* AsyncGetToDoItemsOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsOffsetResponse>* PrepareAsyncGetToDoItemsOffsetRaw(::grpc::ClientContext* context, const ::messenger::GetToDoItemsOffsetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsResponse>* AsyncGetToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::messenger::GetToDoItemsResponse>* PrepareAsyncGetToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetToDoItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::messenger::ToDoItem>* GetNewToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request) override;
    ::grpc::ClientAsyncReader< ::messenger::ToDoItem>* AsyncGetNewToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::messenger::ToDoItem>* PrepareAsyncGetNewToDoItemsRaw(::grpc::ClientContext* context, const ::messenger::GetNewToDoItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SendMessage_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateGroupChat_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateGroupChat_;
    const ::grpc::internal::RpcMethod rpcmethod_AssignRoleToUser_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateReminder_;
    const ::grpc::internal::RpcMethod rpcmethod_MarkToDoItemCompleted_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteMessage_;
    const ::grpc::internal::RpcMethod rpcmethod_EditMessage_;
    const ::grpc::internal::RpcMethod rpcmethod_Register_;
    const ::grpc::internal::RpcMethod rpcmethod_Login_;
    const ::grpc::internal::RpcMethod rpcmethod_Logout_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateUserProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateMessageStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_AddContact_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveContact_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateChatFolder_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateChatFolder_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteChatFolder_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFoldersOffset_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFolders_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNewFolders_;
    const ::grpc::internal::RpcMethod rpcmethod_AddChatToFolder_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveChatFromFolder_;
    const ::grpc::internal::RpcMethod rpcmethod_AddGroupMember_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveGroupMember_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMessagesOffset_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMessagesConversion_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNewMessages_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGroupChatsOffset_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGroupChatsConversion_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNewGroupChats_;
    const ::grpc::internal::RpcMethod rpcmethod_SendFile_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchMessages_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchChats_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateReminder_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteReminder_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateNotificationSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateToDoItem_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateToDoItem_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteToDoItem_;
    const ::grpc::internal::RpcMethod rpcmethod_GetToDoItemsOffset_;
    const ::grpc::internal::RpcMethod rpcmethod_GetToDoItems_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNewToDoItems_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SendMessage(::grpc::ServerContext* context, const ::messenger::SentMessage* request, ::messenger::ChatMessage* response);
    virtual ::grpc::Status CreateGroupChat(::grpc::ServerContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response);
    virtual ::grpc::Status UpdateGroupChat(::grpc::ServerContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response);
    virtual ::grpc::Status AssignRoleToUser(::grpc::ServerContext* context, const ::messenger::Role* request, ::messenger::Role* response);
    virtual ::grpc::Status CreateReminder(::grpc::ServerContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response);
    virtual ::grpc::Status MarkToDoItemCompleted(::grpc::ServerContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response);
    // Методы для удаления и редактирования сообщений
    virtual ::grpc::Status DeleteMessage(::grpc::ServerContext* context, const ::messenger::DeleteMessageRequest* request, ::messenger::DeleteMessageResponse* response);
    virtual ::grpc::Status EditMessage(::grpc::ServerContext* context, const ::messenger::EditMessageRequest* request, ::messenger::EditMessageResponse* response);
    // Методы для аутентификации и управления пользователями
    virtual ::grpc::Status Register(::grpc::ServerContext* context, const ::messenger::RegisterRequest* request, ::messenger::RegisterResponse* response);
    virtual ::grpc::Status Login(::grpc::ServerContext* context, const ::messenger::LoginRequest* request, ::messenger::LoginResponse* response);
    virtual ::grpc::Status Logout(::grpc::ServerContext* context, const ::messenger::LogoutRequest* request, ::messenger::LogoutResponse* response);
    virtual ::grpc::Status UpdateUserProfile(::grpc::ServerContext* context, const ::messenger::UpdateUserProfileRequest* request, ::messenger::UpdateUserProfileResponse* response);
    virtual ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* context, const ::messenger::UpdateMessageStatusRequest* request, ::messenger::UpdateMessageStatusResponse* response);
    // Методы для управления контактами
    virtual ::grpc::Status AddContact(::grpc::ServerContext* context, const ::messenger::AddContactRequest* request, ::messenger::AddContactResponse* response);
    virtual ::grpc::Status RemoveContact(::grpc::ServerContext* context, const ::messenger::RemoveContactRequest* request, ::messenger::RemoveContactResponse* response);
    // Методы для работы с папками чатов
    virtual ::grpc::Status CreateChatFolder(::grpc::ServerContext* context, const ::messenger::CreateChatFolderRequest* request, ::messenger::CreateChatFolderResponse* response);
    virtual ::grpc::Status UpdateChatFolder(::grpc::ServerContext* context, const ::messenger::UpdateChatFolderRequest* request, ::messenger::UpdateChatFolderResponse* response);
    virtual ::grpc::Status DeleteChatFolder(::grpc::ServerContext* context, const ::messenger::DeleteChatFolderRequest* request, ::messenger::DeleteChatFolderResponse* response);
    virtual ::grpc::Status GetFoldersOffset(::grpc::ServerContext* context, const ::messenger::GetFoldersOffsetRequest* request, ::messenger::GetFoldersOffsetResponse* response);
    virtual ::grpc::Status GetFolders(::grpc::ServerContext* context, const ::messenger::GetFoldersRequest* request, ::messenger::GetFoldersResponse* response);
    virtual ::grpc::Status GetNewFolders(::grpc::ServerContext* context, const ::messenger::GetNewFoldersRequest* request, ::grpc::ServerWriter< ::messenger::ChatFolder>* writer);
    // Поток новых папок
    virtual ::grpc::Status AddChatToFolder(::grpc::ServerContext* context, const ::messenger::AddChatToFolderRequest* request, ::messenger::AddChatToFolderResponse* response);
    virtual ::grpc::Status RemoveChatFromFolder(::grpc::ServerContext* context, const ::messenger::RemoveChatFromFolderRequest* request, ::messenger::RemoveChatFromFolderResponse* response);
    // Методы для управления участниками группы
    virtual ::grpc::Status AddGroupMember(::grpc::ServerContext* context, const ::messenger::AddGroupMemberRequest* request, ::messenger::AddGroupMemberResponse* response);
    virtual ::grpc::Status RemoveGroupMember(::grpc::ServerContext* context, const ::messenger::RemoveGroupMemberRequest* request, ::messenger::RemoveGroupMemberResponse* response);
    // Методы для получения списка чатов и сообщений
    // rpc GetGroupChats(string) returns (stream GroupChat);
    // rpc GetChatMessages(string) returns (stream ChatMessage);
    virtual ::grpc::Status GetMessagesOffset(::grpc::ServerContext* context, const ::messenger::GetMessagesOffsetRequest* request, ::messenger::GetMessagesOffsetResponse* response);
    virtual ::grpc::Status GetMessagesConversion(::grpc::ServerContext* context, const ::messenger::GetMessagesConversionRequest* request, ::messenger::GetMessagesConversionResponse* response);
    virtual ::grpc::Status GetNewMessages(::grpc::ServerContext* context, const ::messenger::GetNewMessagesRequest* request, ::grpc::ServerWriter< ::messenger::ChatMessage>* writer);
    virtual ::grpc::Status GetGroupChatsOffset(::grpc::ServerContext* context, const ::messenger::GetGroupChatsOffsetRequest* request, ::messenger::GetGroupChatsOffsetResponse* response);
    virtual ::grpc::Status GetGroupChatsConversion(::grpc::ServerContext* context, const ::messenger::GetGroupChatsConversionRequest* request, ::messenger::GetGroupChatsConversionResponse* response);
    virtual ::grpc::Status GetNewGroupChats(::grpc::ServerContext* context, const ::messenger::GetNewGroupChatsRequest* request, ::grpc::ServerWriter< ::messenger::GroupChat>* writer);
    // Метод для отправки файла
    virtual ::grpc::Status SendFile(::grpc::ServerContext* context, const ::messenger::FileMessage* request, ::messenger::FileMessage* response);
    // Методы поиска
    virtual ::grpc::Status SearchMessages(::grpc::ServerContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchMessagesResponse* response);
    virtual ::grpc::Status SearchChats(::grpc::ServerContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchChatsResponse* response);
    // Методы для управления напоминаниями
    virtual ::grpc::Status UpdateReminder(::grpc::ServerContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response);
    virtual ::grpc::Status DeleteReminder(::grpc::ServerContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response);
    // rpc GetReminders(string) returns (stream Reminder);
    // Методы для управления уведомлениями
    virtual ::grpc::Status UpdateNotificationSettings(::grpc::ServerContext* context, const ::messenger::UpdateNotificationSettingsRequest* request, ::messenger::UpdateNotificationSettingsResponse* response);
    // Методы для управления списком дел
    virtual ::grpc::Status CreateToDoItem(::grpc::ServerContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response);
    virtual ::grpc::Status UpdateToDoItem(::grpc::ServerContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response);
    virtual ::grpc::Status DeleteToDoItem(::grpc::ServerContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response);
    // rpc GetToDoList(string) returns (stream ToDoItem);
    // Методы для получения задач из списка дел
    virtual ::grpc::Status GetToDoItemsOffset(::grpc::ServerContext* context, const ::messenger::GetToDoItemsOffsetRequest* request, ::messenger::GetToDoItemsOffsetResponse* response);
    virtual ::grpc::Status GetToDoItems(::grpc::ServerContext* context, const ::messenger::GetToDoItemsRequest* request, ::messenger::GetToDoItemsResponse* response);
    virtual ::grpc::Status GetNewToDoItems(::grpc::ServerContext* context, const ::messenger::GetNewToDoItemsRequest* request, ::grpc::ServerWriter< ::messenger::ToDoItem>* writer);
    // Поток новых задач
  };
  template <class BaseClass>
  class WithAsyncMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendMessage() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::messenger::SentMessage* /*request*/, ::messenger::ChatMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMessage(::grpc::ServerContext* context, ::messenger::SentMessage* request, ::grpc::ServerAsyncResponseWriter< ::messenger::ChatMessage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateGroupChat() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateGroupChat(::grpc::ServerContext* context, ::messenger::GroupChat* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GroupChat>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateGroupChat() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateGroupChat(::grpc::ServerContext* context, ::messenger::GroupChat* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GroupChat>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AssignRoleToUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AssignRoleToUser() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_AssignRoleToUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AssignRoleToUser(::grpc::ServerContext* /*context*/, const ::messenger::Role* /*request*/, ::messenger::Role* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAssignRoleToUser(::grpc::ServerContext* context, ::messenger::Role* request, ::grpc::ServerAsyncResponseWriter< ::messenger::Role>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateReminder() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_CreateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateReminder(::grpc::ServerContext* context, ::messenger::Reminder* request, ::grpc::ServerAsyncResponseWriter< ::messenger::Reminder>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MarkToDoItemCompleted : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MarkToDoItemCompleted() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_MarkToDoItemCompleted() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MarkToDoItemCompleted(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMarkToDoItemCompleted(::grpc::ServerContext* context, ::messenger::ToDoItem* request, ::grpc::ServerAsyncResponseWriter< ::messenger::ToDoItem>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::messenger::DeleteMessageRequest* /*request*/, ::messenger::DeleteMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMessage(::grpc::ServerContext* context, ::messenger::DeleteMessageRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::DeleteMessageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EditMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EditMessage() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_EditMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMessage(::grpc::ServerContext* /*context*/, const ::messenger::EditMessageRequest* /*request*/, ::messenger::EditMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditMessage(::grpc::ServerContext* context, ::messenger::EditMessageRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::EditMessageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Register() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::messenger::RegisterRequest* /*request*/, ::messenger::RegisterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegister(::grpc::ServerContext* context, ::messenger::RegisterRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::RegisterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Login() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::messenger::LoginRequest* /*request*/, ::messenger::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::messenger::LoginRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::LoginResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Logout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Logout() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_Logout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logout(::grpc::ServerContext* /*context*/, const ::messenger::LogoutRequest* /*request*/, ::messenger::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogout(::grpc::ServerContext* context, ::messenger::LogoutRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::LogoutResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::messenger::UpdateUserProfileRequest* /*request*/, ::messenger::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUserProfile(::grpc::ServerContext* context, ::messenger::UpdateUserProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::UpdateUserProfileResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::messenger::UpdateMessageStatusRequest* /*request*/, ::messenger::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateMessageStatus(::grpc::ServerContext* context, ::messenger::UpdateMessageStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::UpdateMessageStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddContact() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_AddContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddContact(::grpc::ServerContext* /*context*/, const ::messenger::AddContactRequest* /*request*/, ::messenger::AddContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddContact(::grpc::ServerContext* context, ::messenger::AddContactRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::AddContactResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveContact() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_RemoveContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveContact(::grpc::ServerContext* /*context*/, const ::messenger::RemoveContactRequest* /*request*/, ::messenger::RemoveContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveContact(::grpc::ServerContext* context, ::messenger::RemoveContactRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::RemoveContactResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateChatFolder() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_CreateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::CreateChatFolderRequest* /*request*/, ::messenger::CreateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateChatFolder(::grpc::ServerContext* context, ::messenger::CreateChatFolderRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::CreateChatFolderResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateChatFolder() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_UpdateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::UpdateChatFolderRequest* /*request*/, ::messenger::UpdateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateChatFolder(::grpc::ServerContext* context, ::messenger::UpdateChatFolderRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::UpdateChatFolderResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteChatFolder() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_DeleteChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::DeleteChatFolderRequest* /*request*/, ::messenger::DeleteChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteChatFolder(::grpc::ServerContext* context, ::messenger::DeleteChatFolderRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::DeleteChatFolderResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFoldersOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFoldersOffset() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetFoldersOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFoldersOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersOffsetRequest* /*request*/, ::messenger::GetFoldersOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFoldersOffset(::grpc::ServerContext* context, ::messenger::GetFoldersOffsetRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GetFoldersOffsetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFolders() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_GetFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersRequest* /*request*/, ::messenger::GetFoldersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFolders(::grpc::ServerContext* context, ::messenger::GetFoldersRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GetFoldersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNewFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNewFolders() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_GetNewFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetNewFoldersRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatFolder>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNewFolders(::grpc::ServerContext* context, ::messenger::GetNewFoldersRequest* request, ::grpc::ServerAsyncWriter< ::messenger::ChatFolder>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(20, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddChatToFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddChatToFolder() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_AddChatToFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddChatToFolder(::grpc::ServerContext* /*context*/, const ::messenger::AddChatToFolderRequest* /*request*/, ::messenger::AddChatToFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddChatToFolder(::grpc::ServerContext* context, ::messenger::AddChatToFolderRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::AddChatToFolderResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveChatFromFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveChatFromFolder() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_RemoveChatFromFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveChatFromFolder(::grpc::ServerContext* /*context*/, const ::messenger::RemoveChatFromFolderRequest* /*request*/, ::messenger::RemoveChatFromFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveChatFromFolder(::grpc::ServerContext* context, ::messenger::RemoveChatFromFolderRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::RemoveChatFromFolderResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddGroupMember() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_AddGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::AddGroupMemberRequest* /*request*/, ::messenger::AddGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddGroupMember(::grpc::ServerContext* context, ::messenger::AddGroupMemberRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::AddGroupMemberResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveGroupMember() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_RemoveGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::RemoveGroupMemberRequest* /*request*/, ::messenger::RemoveGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveGroupMember(::grpc::ServerContext* context, ::messenger::RemoveGroupMemberRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::RemoveGroupMemberResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMessagesOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMessagesOffset() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_GetMessagesOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesOffsetRequest* /*request*/, ::messenger::GetMessagesOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMessagesOffset(::grpc::ServerContext* context, ::messenger::GetMessagesOffsetRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GetMessagesOffsetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMessagesConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMessagesConversion() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_GetMessagesConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesConversionRequest* /*request*/, ::messenger::GetMessagesConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMessagesConversion(::grpc::ServerContext* context, ::messenger::GetMessagesConversionRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GetMessagesConversionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNewMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNewMessages() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_GetNewMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewMessages(::grpc::ServerContext* /*context*/, const ::messenger::GetNewMessagesRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNewMessages(::grpc::ServerContext* context, ::messenger::GetNewMessagesRequest* request, ::grpc::ServerAsyncWriter< ::messenger::ChatMessage>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(27, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGroupChatsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetGroupChatsOffset() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_GetGroupChatsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsOffsetRequest* /*request*/, ::messenger::GetGroupChatsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGroupChatsOffset(::grpc::ServerContext* context, ::messenger::GetGroupChatsOffsetRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GetGroupChatsOffsetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGroupChatsConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetGroupChatsConversion() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_GetGroupChatsConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsConversionRequest* /*request*/, ::messenger::GetGroupChatsConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGroupChatsConversion(::grpc::ServerContext* context, ::messenger::GetGroupChatsConversionRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GetGroupChatsConversionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNewGroupChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNewGroupChats() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_GetNewGroupChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewGroupChats(::grpc::ServerContext* /*context*/, const ::messenger::GetNewGroupChatsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::GroupChat>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNewGroupChats(::grpc::ServerContext* context, ::messenger::GetNewGroupChatsRequest* request, ::grpc::ServerAsyncWriter< ::messenger::GroupChat>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(30, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendFile() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_SendFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendFile(::grpc::ServerContext* /*context*/, const ::messenger::FileMessage* /*request*/, ::messenger::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendFile(::grpc::ServerContext* context, ::messenger::FileMessage* request, ::grpc::ServerAsyncResponseWriter< ::messenger::FileMessage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SearchMessages() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchMessages(::grpc::ServerContext* context, ::messenger::SearchRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::SearchMessagesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SearchChats() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_SearchChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChats(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchChats(::grpc::ServerContext* context, ::messenger::SearchRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::SearchChatsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateReminder() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_UpdateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateReminder(::grpc::ServerContext* context, ::messenger::Reminder* request, ::grpc::ServerAsyncResponseWriter< ::messenger::Reminder>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteReminder() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_DeleteReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteReminder(::grpc::ServerContext* context, ::messenger::Reminder* request, ::grpc::ServerAsyncResponseWriter< ::messenger::Reminder>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateNotificationSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateNotificationSettings() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_UpdateNotificationSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNotificationSettings(::grpc::ServerContext* /*context*/, const ::messenger::UpdateNotificationSettingsRequest* /*request*/, ::messenger::UpdateNotificationSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNotificationSettings(::grpc::ServerContext* context, ::messenger::UpdateNotificationSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::UpdateNotificationSettingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateToDoItem() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_CreateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateToDoItem(::grpc::ServerContext* context, ::messenger::ToDoItem* request, ::grpc::ServerAsyncResponseWriter< ::messenger::ToDoItem>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateToDoItem() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_UpdateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateToDoItem(::grpc::ServerContext* context, ::messenger::ToDoItem* request, ::grpc::ServerAsyncResponseWriter< ::messenger::ToDoItem>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteToDoItem() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_DeleteToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteToDoItem(::grpc::ServerContext* context, ::messenger::ToDoItem* request, ::grpc::ServerAsyncResponseWriter< ::messenger::ToDoItem>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetToDoItemsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetToDoItemsOffset() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_GetToDoItemsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItemsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsOffsetRequest* /*request*/, ::messenger::GetToDoItemsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetToDoItemsOffset(::grpc::ServerContext* context, ::messenger::GetToDoItemsOffsetRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GetToDoItemsOffsetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetToDoItems() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_GetToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsRequest* /*request*/, ::messenger::GetToDoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetToDoItems(::grpc::ServerContext* context, ::messenger::GetToDoItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::messenger::GetToDoItemsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNewToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNewToDoItems() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_GetNewToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetNewToDoItemsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ToDoItem>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNewToDoItems(::grpc::ServerContext* context, ::messenger::GetNewToDoItemsRequest* request, ::grpc::ServerAsyncWriter< ::messenger::ToDoItem>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(42, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SendMessage<WithAsyncMethod_CreateGroupChat<WithAsyncMethod_UpdateGroupChat<WithAsyncMethod_AssignRoleToUser<WithAsyncMethod_CreateReminder<WithAsyncMethod_MarkToDoItemCompleted<WithAsyncMethod_DeleteMessage<WithAsyncMethod_EditMessage<WithAsyncMethod_Register<WithAsyncMethod_Login<WithAsyncMethod_Logout<WithAsyncMethod_UpdateUserProfile<WithAsyncMethod_UpdateMessageStatus<WithAsyncMethod_AddContact<WithAsyncMethod_RemoveContact<WithAsyncMethod_CreateChatFolder<WithAsyncMethod_UpdateChatFolder<WithAsyncMethod_DeleteChatFolder<WithAsyncMethod_GetFoldersOffset<WithAsyncMethod_GetFolders<WithAsyncMethod_GetNewFolders<WithAsyncMethod_AddChatToFolder<WithAsyncMethod_RemoveChatFromFolder<WithAsyncMethod_AddGroupMember<WithAsyncMethod_RemoveGroupMember<WithAsyncMethod_GetMessagesOffset<WithAsyncMethod_GetMessagesConversion<WithAsyncMethod_GetNewMessages<WithAsyncMethod_GetGroupChatsOffset<WithAsyncMethod_GetGroupChatsConversion<WithAsyncMethod_GetNewGroupChats<WithAsyncMethod_SendFile<WithAsyncMethod_SearchMessages<WithAsyncMethod_SearchChats<WithAsyncMethod_UpdateReminder<WithAsyncMethod_DeleteReminder<WithAsyncMethod_UpdateNotificationSettings<WithAsyncMethod_CreateToDoItem<WithAsyncMethod_UpdateToDoItem<WithAsyncMethod_DeleteToDoItem<WithAsyncMethod_GetToDoItemsOffset<WithAsyncMethod_GetToDoItems<WithAsyncMethod_GetNewToDoItems<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendMessage() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::SentMessage, ::messenger::ChatMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::SentMessage* request, ::messenger::ChatMessage* response) { return this->SendMessage(context, request, response); }));}
    void SetMessageAllocatorFor_SendMessage(
        ::grpc::MessageAllocator< ::messenger::SentMessage, ::messenger::ChatMessage>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::SentMessage, ::messenger::ChatMessage>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::messenger::SentMessage* /*request*/, ::messenger::ChatMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::SentMessage* /*request*/, ::messenger::ChatMessage* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateGroupChat() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GroupChat, ::messenger::GroupChat>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response) { return this->CreateGroupChat(context, request, response); }));}
    void SetMessageAllocatorFor_CreateGroupChat(
        ::grpc::MessageAllocator< ::messenger::GroupChat, ::messenger::GroupChat>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GroupChat, ::messenger::GroupChat>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateGroupChat(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateGroupChat() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GroupChat, ::messenger::GroupChat>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GroupChat* request, ::messenger::GroupChat* response) { return this->UpdateGroupChat(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateGroupChat(
        ::grpc::MessageAllocator< ::messenger::GroupChat, ::messenger::GroupChat>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GroupChat, ::messenger::GroupChat>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateGroupChat(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AssignRoleToUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AssignRoleToUser() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::Role, ::messenger::Role>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::Role* request, ::messenger::Role* response) { return this->AssignRoleToUser(context, request, response); }));}
    void SetMessageAllocatorFor_AssignRoleToUser(
        ::grpc::MessageAllocator< ::messenger::Role, ::messenger::Role>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::Role, ::messenger::Role>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AssignRoleToUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AssignRoleToUser(::grpc::ServerContext* /*context*/, const ::messenger::Role* /*request*/, ::messenger::Role* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AssignRoleToUser(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::Role* /*request*/, ::messenger::Role* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateReminder() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::Reminder, ::messenger::Reminder>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response) { return this->CreateReminder(context, request, response); }));}
    void SetMessageAllocatorFor_CreateReminder(
        ::grpc::MessageAllocator< ::messenger::Reminder, ::messenger::Reminder>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::Reminder, ::messenger::Reminder>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MarkToDoItemCompleted : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MarkToDoItemCompleted() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::ToDoItem, ::messenger::ToDoItem>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response) { return this->MarkToDoItemCompleted(context, request, response); }));}
    void SetMessageAllocatorFor_MarkToDoItemCompleted(
        ::grpc::MessageAllocator< ::messenger::ToDoItem, ::messenger::ToDoItem>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::ToDoItem, ::messenger::ToDoItem>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MarkToDoItemCompleted() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MarkToDoItemCompleted(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MarkToDoItemCompleted(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::DeleteMessageRequest, ::messenger::DeleteMessageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::DeleteMessageRequest* request, ::messenger::DeleteMessageResponse* response) { return this->DeleteMessage(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteMessage(
        ::grpc::MessageAllocator< ::messenger::DeleteMessageRequest, ::messenger::DeleteMessageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::DeleteMessageRequest, ::messenger::DeleteMessageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::messenger::DeleteMessageRequest* /*request*/, ::messenger::DeleteMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::DeleteMessageRequest* /*request*/, ::messenger::DeleteMessageResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EditMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EditMessage() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::EditMessageRequest, ::messenger::EditMessageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::EditMessageRequest* request, ::messenger::EditMessageResponse* response) { return this->EditMessage(context, request, response); }));}
    void SetMessageAllocatorFor_EditMessage(
        ::grpc::MessageAllocator< ::messenger::EditMessageRequest, ::messenger::EditMessageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::EditMessageRequest, ::messenger::EditMessageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_EditMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMessage(::grpc::ServerContext* /*context*/, const ::messenger::EditMessageRequest* /*request*/, ::messenger::EditMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::EditMessageRequest* /*request*/, ::messenger::EditMessageResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Register() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::RegisterRequest, ::messenger::RegisterResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::RegisterRequest* request, ::messenger::RegisterResponse* response) { return this->Register(context, request, response); }));}
    void SetMessageAllocatorFor_Register(
        ::grpc::MessageAllocator< ::messenger::RegisterRequest, ::messenger::RegisterResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::RegisterRequest, ::messenger::RegisterResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::messenger::RegisterRequest* /*request*/, ::messenger::RegisterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Register(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::RegisterRequest* /*request*/, ::messenger::RegisterResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Login() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::LoginRequest, ::messenger::LoginResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::LoginRequest* request, ::messenger::LoginResponse* response) { return this->Login(context, request, response); }));}
    void SetMessageAllocatorFor_Login(
        ::grpc::MessageAllocator< ::messenger::LoginRequest, ::messenger::LoginResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::LoginRequest, ::messenger::LoginResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::messenger::LoginRequest* /*request*/, ::messenger::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::LoginRequest* /*request*/, ::messenger::LoginResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Logout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Logout() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::LogoutRequest, ::messenger::LogoutResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::LogoutRequest* request, ::messenger::LogoutResponse* response) { return this->Logout(context, request, response); }));}
    void SetMessageAllocatorFor_Logout(
        ::grpc::MessageAllocator< ::messenger::LogoutRequest, ::messenger::LogoutResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::LogoutRequest, ::messenger::LogoutResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Logout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logout(::grpc::ServerContext* /*context*/, const ::messenger::LogoutRequest* /*request*/, ::messenger::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Logout(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::LogoutRequest* /*request*/, ::messenger::LogoutResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::UpdateUserProfileRequest, ::messenger::UpdateUserProfileResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::UpdateUserProfileRequest* request, ::messenger::UpdateUserProfileResponse* response) { return this->UpdateUserProfile(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateUserProfile(
        ::grpc::MessageAllocator< ::messenger::UpdateUserProfileRequest, ::messenger::UpdateUserProfileResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::UpdateUserProfileRequest, ::messenger::UpdateUserProfileResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::messenger::UpdateUserProfileRequest* /*request*/, ::messenger::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUserProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::UpdateUserProfileRequest* /*request*/, ::messenger::UpdateUserProfileResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::UpdateMessageStatusRequest, ::messenger::UpdateMessageStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::UpdateMessageStatusRequest* request, ::messenger::UpdateMessageStatusResponse* response) { return this->UpdateMessageStatus(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateMessageStatus(
        ::grpc::MessageAllocator< ::messenger::UpdateMessageStatusRequest, ::messenger::UpdateMessageStatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::UpdateMessageStatusRequest, ::messenger::UpdateMessageStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::messenger::UpdateMessageStatusRequest* /*request*/, ::messenger::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateMessageStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::UpdateMessageStatusRequest* /*request*/, ::messenger::UpdateMessageStatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddContact() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::AddContactRequest, ::messenger::AddContactResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::AddContactRequest* request, ::messenger::AddContactResponse* response) { return this->AddContact(context, request, response); }));}
    void SetMessageAllocatorFor_AddContact(
        ::grpc::MessageAllocator< ::messenger::AddContactRequest, ::messenger::AddContactResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::AddContactRequest, ::messenger::AddContactResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddContact(::grpc::ServerContext* /*context*/, const ::messenger::AddContactRequest* /*request*/, ::messenger::AddContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddContact(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::AddContactRequest* /*request*/, ::messenger::AddContactResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveContact() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::RemoveContactRequest, ::messenger::RemoveContactResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::RemoveContactRequest* request, ::messenger::RemoveContactResponse* response) { return this->RemoveContact(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveContact(
        ::grpc::MessageAllocator< ::messenger::RemoveContactRequest, ::messenger::RemoveContactResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::RemoveContactRequest, ::messenger::RemoveContactResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveContact(::grpc::ServerContext* /*context*/, const ::messenger::RemoveContactRequest* /*request*/, ::messenger::RemoveContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveContact(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::RemoveContactRequest* /*request*/, ::messenger::RemoveContactResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateChatFolder() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::CreateChatFolderRequest, ::messenger::CreateChatFolderResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::CreateChatFolderRequest* request, ::messenger::CreateChatFolderResponse* response) { return this->CreateChatFolder(context, request, response); }));}
    void SetMessageAllocatorFor_CreateChatFolder(
        ::grpc::MessageAllocator< ::messenger::CreateChatFolderRequest, ::messenger::CreateChatFolderResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::CreateChatFolderRequest, ::messenger::CreateChatFolderResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::CreateChatFolderRequest* /*request*/, ::messenger::CreateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateChatFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::CreateChatFolderRequest* /*request*/, ::messenger::CreateChatFolderResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateChatFolder() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::UpdateChatFolderRequest, ::messenger::UpdateChatFolderResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::UpdateChatFolderRequest* request, ::messenger::UpdateChatFolderResponse* response) { return this->UpdateChatFolder(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateChatFolder(
        ::grpc::MessageAllocator< ::messenger::UpdateChatFolderRequest, ::messenger::UpdateChatFolderResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::UpdateChatFolderRequest, ::messenger::UpdateChatFolderResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::UpdateChatFolderRequest* /*request*/, ::messenger::UpdateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateChatFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::UpdateChatFolderRequest* /*request*/, ::messenger::UpdateChatFolderResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteChatFolder() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::DeleteChatFolderRequest, ::messenger::DeleteChatFolderResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::DeleteChatFolderRequest* request, ::messenger::DeleteChatFolderResponse* response) { return this->DeleteChatFolder(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteChatFolder(
        ::grpc::MessageAllocator< ::messenger::DeleteChatFolderRequest, ::messenger::DeleteChatFolderResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::DeleteChatFolderRequest, ::messenger::DeleteChatFolderResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::DeleteChatFolderRequest* /*request*/, ::messenger::DeleteChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteChatFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::DeleteChatFolderRequest* /*request*/, ::messenger::DeleteChatFolderResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFoldersOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFoldersOffset() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GetFoldersOffsetRequest, ::messenger::GetFoldersOffsetResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetFoldersOffsetRequest* request, ::messenger::GetFoldersOffsetResponse* response) { return this->GetFoldersOffset(context, request, response); }));}
    void SetMessageAllocatorFor_GetFoldersOffset(
        ::grpc::MessageAllocator< ::messenger::GetFoldersOffsetRequest, ::messenger::GetFoldersOffsetResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GetFoldersOffsetRequest, ::messenger::GetFoldersOffsetResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFoldersOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFoldersOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersOffsetRequest* /*request*/, ::messenger::GetFoldersOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFoldersOffset(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetFoldersOffsetRequest* /*request*/, ::messenger::GetFoldersOffsetResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFolders() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GetFoldersRequest, ::messenger::GetFoldersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetFoldersRequest* request, ::messenger::GetFoldersResponse* response) { return this->GetFolders(context, request, response); }));}
    void SetMessageAllocatorFor_GetFolders(
        ::grpc::MessageAllocator< ::messenger::GetFoldersRequest, ::messenger::GetFoldersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GetFoldersRequest, ::messenger::GetFoldersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersRequest* /*request*/, ::messenger::GetFoldersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFolders(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetFoldersRequest* /*request*/, ::messenger::GetFoldersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNewFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNewFolders() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackServerStreamingHandler< ::messenger::GetNewFoldersRequest, ::messenger::ChatFolder>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetNewFoldersRequest* request) { return this->GetNewFolders(context, request); }));
    }
    ~WithCallbackMethod_GetNewFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetNewFoldersRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatFolder>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::messenger::ChatFolder>* GetNewFolders(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetNewFoldersRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddChatToFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddChatToFolder() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::AddChatToFolderRequest, ::messenger::AddChatToFolderResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::AddChatToFolderRequest* request, ::messenger::AddChatToFolderResponse* response) { return this->AddChatToFolder(context, request, response); }));}
    void SetMessageAllocatorFor_AddChatToFolder(
        ::grpc::MessageAllocator< ::messenger::AddChatToFolderRequest, ::messenger::AddChatToFolderResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::AddChatToFolderRequest, ::messenger::AddChatToFolderResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddChatToFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddChatToFolder(::grpc::ServerContext* /*context*/, const ::messenger::AddChatToFolderRequest* /*request*/, ::messenger::AddChatToFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddChatToFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::AddChatToFolderRequest* /*request*/, ::messenger::AddChatToFolderResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveChatFromFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveChatFromFolder() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::RemoveChatFromFolderRequest, ::messenger::RemoveChatFromFolderResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::RemoveChatFromFolderRequest* request, ::messenger::RemoveChatFromFolderResponse* response) { return this->RemoveChatFromFolder(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveChatFromFolder(
        ::grpc::MessageAllocator< ::messenger::RemoveChatFromFolderRequest, ::messenger::RemoveChatFromFolderResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::RemoveChatFromFolderRequest, ::messenger::RemoveChatFromFolderResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveChatFromFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveChatFromFolder(::grpc::ServerContext* /*context*/, const ::messenger::RemoveChatFromFolderRequest* /*request*/, ::messenger::RemoveChatFromFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveChatFromFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::RemoveChatFromFolderRequest* /*request*/, ::messenger::RemoveChatFromFolderResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddGroupMember() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::AddGroupMemberRequest, ::messenger::AddGroupMemberResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::AddGroupMemberRequest* request, ::messenger::AddGroupMemberResponse* response) { return this->AddGroupMember(context, request, response); }));}
    void SetMessageAllocatorFor_AddGroupMember(
        ::grpc::MessageAllocator< ::messenger::AddGroupMemberRequest, ::messenger::AddGroupMemberResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::AddGroupMemberRequest, ::messenger::AddGroupMemberResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::AddGroupMemberRequest* /*request*/, ::messenger::AddGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddGroupMember(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::AddGroupMemberRequest* /*request*/, ::messenger::AddGroupMemberResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveGroupMember() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::RemoveGroupMemberRequest, ::messenger::RemoveGroupMemberResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::RemoveGroupMemberRequest* request, ::messenger::RemoveGroupMemberResponse* response) { return this->RemoveGroupMember(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveGroupMember(
        ::grpc::MessageAllocator< ::messenger::RemoveGroupMemberRequest, ::messenger::RemoveGroupMemberResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::RemoveGroupMemberRequest, ::messenger::RemoveGroupMemberResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::RemoveGroupMemberRequest* /*request*/, ::messenger::RemoveGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveGroupMember(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::RemoveGroupMemberRequest* /*request*/, ::messenger::RemoveGroupMemberResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMessagesOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMessagesOffset() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GetMessagesOffsetRequest, ::messenger::GetMessagesOffsetResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetMessagesOffsetRequest* request, ::messenger::GetMessagesOffsetResponse* response) { return this->GetMessagesOffset(context, request, response); }));}
    void SetMessageAllocatorFor_GetMessagesOffset(
        ::grpc::MessageAllocator< ::messenger::GetMessagesOffsetRequest, ::messenger::GetMessagesOffsetResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GetMessagesOffsetRequest, ::messenger::GetMessagesOffsetResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMessagesOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesOffsetRequest* /*request*/, ::messenger::GetMessagesOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMessagesOffset(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetMessagesOffsetRequest* /*request*/, ::messenger::GetMessagesOffsetResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMessagesConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMessagesConversion() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GetMessagesConversionRequest, ::messenger::GetMessagesConversionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetMessagesConversionRequest* request, ::messenger::GetMessagesConversionResponse* response) { return this->GetMessagesConversion(context, request, response); }));}
    void SetMessageAllocatorFor_GetMessagesConversion(
        ::grpc::MessageAllocator< ::messenger::GetMessagesConversionRequest, ::messenger::GetMessagesConversionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GetMessagesConversionRequest, ::messenger::GetMessagesConversionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMessagesConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesConversionRequest* /*request*/, ::messenger::GetMessagesConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMessagesConversion(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetMessagesConversionRequest* /*request*/, ::messenger::GetMessagesConversionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNewMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNewMessages() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackServerStreamingHandler< ::messenger::GetNewMessagesRequest, ::messenger::ChatMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetNewMessagesRequest* request) { return this->GetNewMessages(context, request); }));
    }
    ~WithCallbackMethod_GetNewMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewMessages(::grpc::ServerContext* /*context*/, const ::messenger::GetNewMessagesRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::messenger::ChatMessage>* GetNewMessages(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetNewMessagesRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetGroupChatsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetGroupChatsOffset() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GetGroupChatsOffsetRequest, ::messenger::GetGroupChatsOffsetResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetGroupChatsOffsetRequest* request, ::messenger::GetGroupChatsOffsetResponse* response) { return this->GetGroupChatsOffset(context, request, response); }));}
    void SetMessageAllocatorFor_GetGroupChatsOffset(
        ::grpc::MessageAllocator< ::messenger::GetGroupChatsOffsetRequest, ::messenger::GetGroupChatsOffsetResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GetGroupChatsOffsetRequest, ::messenger::GetGroupChatsOffsetResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetGroupChatsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsOffsetRequest* /*request*/, ::messenger::GetGroupChatsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGroupChatsOffset(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetGroupChatsOffsetRequest* /*request*/, ::messenger::GetGroupChatsOffsetResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetGroupChatsConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetGroupChatsConversion() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GetGroupChatsConversionRequest, ::messenger::GetGroupChatsConversionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetGroupChatsConversionRequest* request, ::messenger::GetGroupChatsConversionResponse* response) { return this->GetGroupChatsConversion(context, request, response); }));}
    void SetMessageAllocatorFor_GetGroupChatsConversion(
        ::grpc::MessageAllocator< ::messenger::GetGroupChatsConversionRequest, ::messenger::GetGroupChatsConversionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GetGroupChatsConversionRequest, ::messenger::GetGroupChatsConversionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetGroupChatsConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsConversionRequest* /*request*/, ::messenger::GetGroupChatsConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGroupChatsConversion(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetGroupChatsConversionRequest* /*request*/, ::messenger::GetGroupChatsConversionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNewGroupChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNewGroupChats() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackServerStreamingHandler< ::messenger::GetNewGroupChatsRequest, ::messenger::GroupChat>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetNewGroupChatsRequest* request) { return this->GetNewGroupChats(context, request); }));
    }
    ~WithCallbackMethod_GetNewGroupChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewGroupChats(::grpc::ServerContext* /*context*/, const ::messenger::GetNewGroupChatsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::GroupChat>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::messenger::GroupChat>* GetNewGroupChats(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetNewGroupChatsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendFile() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::FileMessage, ::messenger::FileMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::FileMessage* request, ::messenger::FileMessage* response) { return this->SendFile(context, request, response); }));}
    void SetMessageAllocatorFor_SendFile(
        ::grpc::MessageAllocator< ::messenger::FileMessage, ::messenger::FileMessage>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::FileMessage, ::messenger::FileMessage>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendFile(::grpc::ServerContext* /*context*/, const ::messenger::FileMessage* /*request*/, ::messenger::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendFile(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::FileMessage* /*request*/, ::messenger::FileMessage* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SearchMessages() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::SearchRequest, ::messenger::SearchMessagesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchMessagesResponse* response) { return this->SearchMessages(context, request, response); }));}
    void SetMessageAllocatorFor_SearchMessages(
        ::grpc::MessageAllocator< ::messenger::SearchRequest, ::messenger::SearchMessagesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::SearchRequest, ::messenger::SearchMessagesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchMessages(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchMessagesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SearchChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SearchChats() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::SearchRequest, ::messenger::SearchChatsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::SearchRequest* request, ::messenger::SearchChatsResponse* response) { return this->SearchChats(context, request, response); }));}
    void SetMessageAllocatorFor_SearchChats(
        ::grpc::MessageAllocator< ::messenger::SearchRequest, ::messenger::SearchChatsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::SearchRequest, ::messenger::SearchChatsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SearchChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChats(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchChats(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchChatsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateReminder() {
      ::grpc::Service::MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::Reminder, ::messenger::Reminder>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response) { return this->UpdateReminder(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateReminder(
        ::grpc::MessageAllocator< ::messenger::Reminder, ::messenger::Reminder>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::Reminder, ::messenger::Reminder>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteReminder() {
      ::grpc::Service::MarkMethodCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::Reminder, ::messenger::Reminder>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::Reminder* request, ::messenger::Reminder* response) { return this->DeleteReminder(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteReminder(
        ::grpc::MessageAllocator< ::messenger::Reminder, ::messenger::Reminder>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::Reminder, ::messenger::Reminder>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateNotificationSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateNotificationSettings() {
      ::grpc::Service::MarkMethodCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::UpdateNotificationSettingsRequest, ::messenger::UpdateNotificationSettingsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::UpdateNotificationSettingsRequest* request, ::messenger::UpdateNotificationSettingsResponse* response) { return this->UpdateNotificationSettings(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateNotificationSettings(
        ::grpc::MessageAllocator< ::messenger::UpdateNotificationSettingsRequest, ::messenger::UpdateNotificationSettingsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::UpdateNotificationSettingsRequest, ::messenger::UpdateNotificationSettingsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateNotificationSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNotificationSettings(::grpc::ServerContext* /*context*/, const ::messenger::UpdateNotificationSettingsRequest* /*request*/, ::messenger::UpdateNotificationSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNotificationSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::UpdateNotificationSettingsRequest* /*request*/, ::messenger::UpdateNotificationSettingsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateToDoItem() {
      ::grpc::Service::MarkMethodCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::ToDoItem, ::messenger::ToDoItem>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response) { return this->CreateToDoItem(context, request, response); }));}
    void SetMessageAllocatorFor_CreateToDoItem(
        ::grpc::MessageAllocator< ::messenger::ToDoItem, ::messenger::ToDoItem>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(37);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::ToDoItem, ::messenger::ToDoItem>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateToDoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateToDoItem() {
      ::grpc::Service::MarkMethodCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::ToDoItem, ::messenger::ToDoItem>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response) { return this->UpdateToDoItem(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateToDoItem(
        ::grpc::MessageAllocator< ::messenger::ToDoItem, ::messenger::ToDoItem>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(38);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::ToDoItem, ::messenger::ToDoItem>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateToDoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteToDoItem() {
      ::grpc::Service::MarkMethodCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::ToDoItem, ::messenger::ToDoItem>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::ToDoItem* request, ::messenger::ToDoItem* response) { return this->DeleteToDoItem(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteToDoItem(
        ::grpc::MessageAllocator< ::messenger::ToDoItem, ::messenger::ToDoItem>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(39);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::ToDoItem, ::messenger::ToDoItem>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteToDoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetToDoItemsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetToDoItemsOffset() {
      ::grpc::Service::MarkMethodCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GetToDoItemsOffsetRequest, ::messenger::GetToDoItemsOffsetResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetToDoItemsOffsetRequest* request, ::messenger::GetToDoItemsOffsetResponse* response) { return this->GetToDoItemsOffset(context, request, response); }));}
    void SetMessageAllocatorFor_GetToDoItemsOffset(
        ::grpc::MessageAllocator< ::messenger::GetToDoItemsOffsetRequest, ::messenger::GetToDoItemsOffsetResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(40);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GetToDoItemsOffsetRequest, ::messenger::GetToDoItemsOffsetResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetToDoItemsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItemsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsOffsetRequest* /*request*/, ::messenger::GetToDoItemsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetToDoItemsOffset(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetToDoItemsOffsetRequest* /*request*/, ::messenger::GetToDoItemsOffsetResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetToDoItems() {
      ::grpc::Service::MarkMethodCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::messenger::GetToDoItemsRequest, ::messenger::GetToDoItemsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetToDoItemsRequest* request, ::messenger::GetToDoItemsResponse* response) { return this->GetToDoItems(context, request, response); }));}
    void SetMessageAllocatorFor_GetToDoItems(
        ::grpc::MessageAllocator< ::messenger::GetToDoItemsRequest, ::messenger::GetToDoItemsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(41);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::messenger::GetToDoItemsRequest, ::messenger::GetToDoItemsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsRequest* /*request*/, ::messenger::GetToDoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetToDoItems(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetToDoItemsRequest* /*request*/, ::messenger::GetToDoItemsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNewToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNewToDoItems() {
      ::grpc::Service::MarkMethodCallback(42,
          new ::grpc::internal::CallbackServerStreamingHandler< ::messenger::GetNewToDoItemsRequest, ::messenger::ToDoItem>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::messenger::GetNewToDoItemsRequest* request) { return this->GetNewToDoItems(context, request); }));
    }
    ~WithCallbackMethod_GetNewToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetNewToDoItemsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ToDoItem>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::messenger::ToDoItem>* GetNewToDoItems(
      ::grpc::CallbackServerContext* /*context*/, const ::messenger::GetNewToDoItemsRequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SendMessage<WithCallbackMethod_CreateGroupChat<WithCallbackMethod_UpdateGroupChat<WithCallbackMethod_AssignRoleToUser<WithCallbackMethod_CreateReminder<WithCallbackMethod_MarkToDoItemCompleted<WithCallbackMethod_DeleteMessage<WithCallbackMethod_EditMessage<WithCallbackMethod_Register<WithCallbackMethod_Login<WithCallbackMethod_Logout<WithCallbackMethod_UpdateUserProfile<WithCallbackMethod_UpdateMessageStatus<WithCallbackMethod_AddContact<WithCallbackMethod_RemoveContact<WithCallbackMethod_CreateChatFolder<WithCallbackMethod_UpdateChatFolder<WithCallbackMethod_DeleteChatFolder<WithCallbackMethod_GetFoldersOffset<WithCallbackMethod_GetFolders<WithCallbackMethod_GetNewFolders<WithCallbackMethod_AddChatToFolder<WithCallbackMethod_RemoveChatFromFolder<WithCallbackMethod_AddGroupMember<WithCallbackMethod_RemoveGroupMember<WithCallbackMethod_GetMessagesOffset<WithCallbackMethod_GetMessagesConversion<WithCallbackMethod_GetNewMessages<WithCallbackMethod_GetGroupChatsOffset<WithCallbackMethod_GetGroupChatsConversion<WithCallbackMethod_GetNewGroupChats<WithCallbackMethod_SendFile<WithCallbackMethod_SearchMessages<WithCallbackMethod_SearchChats<WithCallbackMethod_UpdateReminder<WithCallbackMethod_DeleteReminder<WithCallbackMethod_UpdateNotificationSettings<WithCallbackMethod_CreateToDoItem<WithCallbackMethod_UpdateToDoItem<WithCallbackMethod_DeleteToDoItem<WithCallbackMethod_GetToDoItemsOffset<WithCallbackMethod_GetToDoItems<WithCallbackMethod_GetNewToDoItems<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendMessage() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::messenger::SentMessage* /*request*/, ::messenger::ChatMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateGroupChat() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateGroupChat() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AssignRoleToUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AssignRoleToUser() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_AssignRoleToUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AssignRoleToUser(::grpc::ServerContext* /*context*/, const ::messenger::Role* /*request*/, ::messenger::Role* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateReminder() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_CreateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MarkToDoItemCompleted : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MarkToDoItemCompleted() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_MarkToDoItemCompleted() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MarkToDoItemCompleted(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::messenger::DeleteMessageRequest* /*request*/, ::messenger::DeleteMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EditMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EditMessage() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_EditMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMessage(::grpc::ServerContext* /*context*/, const ::messenger::EditMessageRequest* /*request*/, ::messenger::EditMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Register() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::messenger::RegisterRequest* /*request*/, ::messenger::RegisterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Login() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::messenger::LoginRequest* /*request*/, ::messenger::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Logout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Logout() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_Logout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logout(::grpc::ServerContext* /*context*/, const ::messenger::LogoutRequest* /*request*/, ::messenger::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::messenger::UpdateUserProfileRequest* /*request*/, ::messenger::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::messenger::UpdateMessageStatusRequest* /*request*/, ::messenger::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddContact() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_AddContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddContact(::grpc::ServerContext* /*context*/, const ::messenger::AddContactRequest* /*request*/, ::messenger::AddContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveContact() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_RemoveContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveContact(::grpc::ServerContext* /*context*/, const ::messenger::RemoveContactRequest* /*request*/, ::messenger::RemoveContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateChatFolder() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_CreateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::CreateChatFolderRequest* /*request*/, ::messenger::CreateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateChatFolder() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_UpdateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::UpdateChatFolderRequest* /*request*/, ::messenger::UpdateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteChatFolder() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_DeleteChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::DeleteChatFolderRequest* /*request*/, ::messenger::DeleteChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFoldersOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFoldersOffset() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetFoldersOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFoldersOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersOffsetRequest* /*request*/, ::messenger::GetFoldersOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFolders() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_GetFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersRequest* /*request*/, ::messenger::GetFoldersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNewFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNewFolders() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_GetNewFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetNewFoldersRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatFolder>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddChatToFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddChatToFolder() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_AddChatToFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddChatToFolder(::grpc::ServerContext* /*context*/, const ::messenger::AddChatToFolderRequest* /*request*/, ::messenger::AddChatToFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveChatFromFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveChatFromFolder() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_RemoveChatFromFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveChatFromFolder(::grpc::ServerContext* /*context*/, const ::messenger::RemoveChatFromFolderRequest* /*request*/, ::messenger::RemoveChatFromFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddGroupMember() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_AddGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::AddGroupMemberRequest* /*request*/, ::messenger::AddGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveGroupMember() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_RemoveGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::RemoveGroupMemberRequest* /*request*/, ::messenger::RemoveGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMessagesOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMessagesOffset() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_GetMessagesOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesOffsetRequest* /*request*/, ::messenger::GetMessagesOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMessagesConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMessagesConversion() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_GetMessagesConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesConversionRequest* /*request*/, ::messenger::GetMessagesConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNewMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNewMessages() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_GetNewMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewMessages(::grpc::ServerContext* /*context*/, const ::messenger::GetNewMessagesRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGroupChatsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetGroupChatsOffset() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_GetGroupChatsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsOffsetRequest* /*request*/, ::messenger::GetGroupChatsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGroupChatsConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetGroupChatsConversion() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_GetGroupChatsConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsConversionRequest* /*request*/, ::messenger::GetGroupChatsConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNewGroupChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNewGroupChats() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_GetNewGroupChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewGroupChats(::grpc::ServerContext* /*context*/, const ::messenger::GetNewGroupChatsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::GroupChat>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendFile() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_SendFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendFile(::grpc::ServerContext* /*context*/, const ::messenger::FileMessage* /*request*/, ::messenger::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SearchMessages() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SearchChats() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_SearchChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChats(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateReminder() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_UpdateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteReminder() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_DeleteReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateNotificationSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateNotificationSettings() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_UpdateNotificationSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNotificationSettings(::grpc::ServerContext* /*context*/, const ::messenger::UpdateNotificationSettingsRequest* /*request*/, ::messenger::UpdateNotificationSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateToDoItem() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_CreateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateToDoItem() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_UpdateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteToDoItem() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_DeleteToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetToDoItemsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetToDoItemsOffset() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_GetToDoItemsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItemsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsOffsetRequest* /*request*/, ::messenger::GetToDoItemsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetToDoItems() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_GetToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsRequest* /*request*/, ::messenger::GetToDoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNewToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNewToDoItems() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_GetNewToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetNewToDoItemsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ToDoItem>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendMessage() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::messenger::SentMessage* /*request*/, ::messenger::ChatMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMessage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateGroupChat() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateGroupChat(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateGroupChat() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateGroupChat(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AssignRoleToUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AssignRoleToUser() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_AssignRoleToUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AssignRoleToUser(::grpc::ServerContext* /*context*/, const ::messenger::Role* /*request*/, ::messenger::Role* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAssignRoleToUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateReminder() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_CreateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateReminder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MarkToDoItemCompleted : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MarkToDoItemCompleted() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_MarkToDoItemCompleted() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MarkToDoItemCompleted(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMarkToDoItemCompleted(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::messenger::DeleteMessageRequest* /*request*/, ::messenger::DeleteMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMessage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EditMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EditMessage() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_EditMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMessage(::grpc::ServerContext* /*context*/, const ::messenger::EditMessageRequest* /*request*/, ::messenger::EditMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditMessage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Register() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::messenger::RegisterRequest* /*request*/, ::messenger::RegisterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegister(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Login() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::messenger::LoginRequest* /*request*/, ::messenger::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Logout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Logout() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_Logout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logout(::grpc::ServerContext* /*context*/, const ::messenger::LogoutRequest* /*request*/, ::messenger::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogout(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::messenger::UpdateUserProfileRequest* /*request*/, ::messenger::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUserProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::messenger::UpdateMessageStatusRequest* /*request*/, ::messenger::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateMessageStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddContact() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_AddContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddContact(::grpc::ServerContext* /*context*/, const ::messenger::AddContactRequest* /*request*/, ::messenger::AddContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddContact(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveContact() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_RemoveContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveContact(::grpc::ServerContext* /*context*/, const ::messenger::RemoveContactRequest* /*request*/, ::messenger::RemoveContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveContact(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateChatFolder() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_CreateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::CreateChatFolderRequest* /*request*/, ::messenger::CreateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateChatFolder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateChatFolder() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_UpdateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::UpdateChatFolderRequest* /*request*/, ::messenger::UpdateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateChatFolder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteChatFolder() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_DeleteChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::DeleteChatFolderRequest* /*request*/, ::messenger::DeleteChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteChatFolder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFoldersOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFoldersOffset() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetFoldersOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFoldersOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersOffsetRequest* /*request*/, ::messenger::GetFoldersOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFoldersOffset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFolders() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_GetFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersRequest* /*request*/, ::messenger::GetFoldersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFolders(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNewFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNewFolders() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_GetNewFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetNewFoldersRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatFolder>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNewFolders(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(20, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddChatToFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddChatToFolder() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_AddChatToFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddChatToFolder(::grpc::ServerContext* /*context*/, const ::messenger::AddChatToFolderRequest* /*request*/, ::messenger::AddChatToFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddChatToFolder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveChatFromFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveChatFromFolder() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_RemoveChatFromFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveChatFromFolder(::grpc::ServerContext* /*context*/, const ::messenger::RemoveChatFromFolderRequest* /*request*/, ::messenger::RemoveChatFromFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveChatFromFolder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddGroupMember() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_AddGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::AddGroupMemberRequest* /*request*/, ::messenger::AddGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddGroupMember(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveGroupMember() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_RemoveGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::RemoveGroupMemberRequest* /*request*/, ::messenger::RemoveGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveGroupMember(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMessagesOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMessagesOffset() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_GetMessagesOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesOffsetRequest* /*request*/, ::messenger::GetMessagesOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMessagesOffset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMessagesConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMessagesConversion() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_GetMessagesConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesConversionRequest* /*request*/, ::messenger::GetMessagesConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMessagesConversion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNewMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNewMessages() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_GetNewMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewMessages(::grpc::ServerContext* /*context*/, const ::messenger::GetNewMessagesRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNewMessages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(27, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetGroupChatsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetGroupChatsOffset() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_GetGroupChatsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsOffsetRequest* /*request*/, ::messenger::GetGroupChatsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGroupChatsOffset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetGroupChatsConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetGroupChatsConversion() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_GetGroupChatsConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsConversionRequest* /*request*/, ::messenger::GetGroupChatsConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGroupChatsConversion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNewGroupChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNewGroupChats() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_GetNewGroupChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewGroupChats(::grpc::ServerContext* /*context*/, const ::messenger::GetNewGroupChatsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::GroupChat>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNewGroupChats(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(30, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendFile() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_SendFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendFile(::grpc::ServerContext* /*context*/, const ::messenger::FileMessage* /*request*/, ::messenger::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SearchMessages() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchMessages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SearchChats() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_SearchChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChats(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchChats(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateReminder() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_UpdateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateReminder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteReminder() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_DeleteReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteReminder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateNotificationSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateNotificationSettings() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_UpdateNotificationSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNotificationSettings(::grpc::ServerContext* /*context*/, const ::messenger::UpdateNotificationSettingsRequest* /*request*/, ::messenger::UpdateNotificationSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNotificationSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateToDoItem() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_CreateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateToDoItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateToDoItem() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_UpdateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateToDoItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteToDoItem() {
      ::grpc::Service::MarkMethodRaw(39);
    }
    ~WithRawMethod_DeleteToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteToDoItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetToDoItemsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetToDoItemsOffset() {
      ::grpc::Service::MarkMethodRaw(40);
    }
    ~WithRawMethod_GetToDoItemsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItemsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsOffsetRequest* /*request*/, ::messenger::GetToDoItemsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetToDoItemsOffset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetToDoItems() {
      ::grpc::Service::MarkMethodRaw(41);
    }
    ~WithRawMethod_GetToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsRequest* /*request*/, ::messenger::GetToDoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetToDoItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNewToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNewToDoItems() {
      ::grpc::Service::MarkMethodRaw(42);
    }
    ~WithRawMethod_GetNewToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetNewToDoItemsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ToDoItem>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNewToDoItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(42, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendMessage() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendMessage(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::messenger::SentMessage* /*request*/, ::messenger::ChatMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateGroupChat() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateGroupChat(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateGroupChat(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateGroupChat() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateGroupChat(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateGroupChat(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AssignRoleToUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AssignRoleToUser() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AssignRoleToUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_AssignRoleToUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AssignRoleToUser(::grpc::ServerContext* /*context*/, const ::messenger::Role* /*request*/, ::messenger::Role* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AssignRoleToUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateReminder() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateReminder(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MarkToDoItemCompleted : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MarkToDoItemCompleted() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MarkToDoItemCompleted(context, request, response); }));
    }
    ~WithRawCallbackMethod_MarkToDoItemCompleted() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MarkToDoItemCompleted(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MarkToDoItemCompleted(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteMessage(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::messenger::DeleteMessageRequest* /*request*/, ::messenger::DeleteMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EditMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EditMessage() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->EditMessage(context, request, response); }));
    }
    ~WithRawCallbackMethod_EditMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMessage(::grpc::ServerContext* /*context*/, const ::messenger::EditMessageRequest* /*request*/, ::messenger::EditMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Register() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Register(context, request, response); }));
    }
    ~WithRawCallbackMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::messenger::RegisterRequest* /*request*/, ::messenger::RegisterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Register(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Login() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Login(context, request, response); }));
    }
    ~WithRawCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::messenger::LoginRequest* /*request*/, ::messenger::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Logout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Logout() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Logout(context, request, response); }));
    }
    ~WithRawCallbackMethod_Logout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logout(::grpc::ServerContext* /*context*/, const ::messenger::LogoutRequest* /*request*/, ::messenger::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Logout(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateUserProfile(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::messenger::UpdateUserProfileRequest* /*request*/, ::messenger::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUserProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateMessageStatus(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::messenger::UpdateMessageStatusRequest* /*request*/, ::messenger::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateMessageStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddContact() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddContact(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddContact(::grpc::ServerContext* /*context*/, const ::messenger::AddContactRequest* /*request*/, ::messenger::AddContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddContact(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveContact() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveContact(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveContact(::grpc::ServerContext* /*context*/, const ::messenger::RemoveContactRequest* /*request*/, ::messenger::RemoveContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveContact(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateChatFolder() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateChatFolder(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::CreateChatFolderRequest* /*request*/, ::messenger::CreateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateChatFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateChatFolder() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateChatFolder(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::UpdateChatFolderRequest* /*request*/, ::messenger::UpdateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateChatFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteChatFolder() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteChatFolder(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::DeleteChatFolderRequest* /*request*/, ::messenger::DeleteChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteChatFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFoldersOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFoldersOffset() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFoldersOffset(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFoldersOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFoldersOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersOffsetRequest* /*request*/, ::messenger::GetFoldersOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFoldersOffset(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFolders() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFolders(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersRequest* /*request*/, ::messenger::GetFoldersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFolders(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNewFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNewFolders() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetNewFolders(context, request); }));
    }
    ~WithRawCallbackMethod_GetNewFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetNewFoldersRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatFolder>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetNewFolders(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddChatToFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddChatToFolder() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddChatToFolder(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddChatToFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddChatToFolder(::grpc::ServerContext* /*context*/, const ::messenger::AddChatToFolderRequest* /*request*/, ::messenger::AddChatToFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddChatToFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveChatFromFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveChatFromFolder() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveChatFromFolder(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveChatFromFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveChatFromFolder(::grpc::ServerContext* /*context*/, const ::messenger::RemoveChatFromFolderRequest* /*request*/, ::messenger::RemoveChatFromFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveChatFromFolder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddGroupMember() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddGroupMember(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::AddGroupMemberRequest* /*request*/, ::messenger::AddGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddGroupMember(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveGroupMember() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveGroupMember(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::RemoveGroupMemberRequest* /*request*/, ::messenger::RemoveGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveGroupMember(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMessagesOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMessagesOffset() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMessagesOffset(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMessagesOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesOffsetRequest* /*request*/, ::messenger::GetMessagesOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMessagesOffset(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMessagesConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMessagesConversion() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMessagesConversion(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMessagesConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessagesConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesConversionRequest* /*request*/, ::messenger::GetMessagesConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMessagesConversion(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNewMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNewMessages() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetNewMessages(context, request); }));
    }
    ~WithRawCallbackMethod_GetNewMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewMessages(::grpc::ServerContext* /*context*/, const ::messenger::GetNewMessagesRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetNewMessages(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetGroupChatsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetGroupChatsOffset() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetGroupChatsOffset(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetGroupChatsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsOffsetRequest* /*request*/, ::messenger::GetGroupChatsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGroupChatsOffset(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetGroupChatsConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetGroupChatsConversion() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetGroupChatsConversion(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetGroupChatsConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGroupChatsConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsConversionRequest* /*request*/, ::messenger::GetGroupChatsConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGroupChatsConversion(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNewGroupChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNewGroupChats() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetNewGroupChats(context, request); }));
    }
    ~WithRawCallbackMethod_GetNewGroupChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewGroupChats(::grpc::ServerContext* /*context*/, const ::messenger::GetNewGroupChatsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::GroupChat>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetNewGroupChats(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendFile() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendFile(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendFile(::grpc::ServerContext* /*context*/, const ::messenger::FileMessage* /*request*/, ::messenger::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SearchMessages() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SearchMessages(context, request, response); }));
    }
    ~WithRawCallbackMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchMessages(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SearchChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SearchChats() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SearchChats(context, request, response); }));
    }
    ~WithRawCallbackMethod_SearchChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChats(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchChats(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateReminder() {
      ::grpc::Service::MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateReminder(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteReminder() {
      ::grpc::Service::MarkMethodRawCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteReminder(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateNotificationSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateNotificationSettings() {
      ::grpc::Service::MarkMethodRawCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateNotificationSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateNotificationSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNotificationSettings(::grpc::ServerContext* /*context*/, const ::messenger::UpdateNotificationSettingsRequest* /*request*/, ::messenger::UpdateNotificationSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNotificationSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateToDoItem() {
      ::grpc::Service::MarkMethodRawCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateToDoItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateToDoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateToDoItem() {
      ::grpc::Service::MarkMethodRawCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateToDoItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateToDoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteToDoItem() {
      ::grpc::Service::MarkMethodRawCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteToDoItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteToDoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetToDoItemsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetToDoItemsOffset() {
      ::grpc::Service::MarkMethodRawCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetToDoItemsOffset(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetToDoItemsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItemsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsOffsetRequest* /*request*/, ::messenger::GetToDoItemsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetToDoItemsOffset(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetToDoItems() {
      ::grpc::Service::MarkMethodRawCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetToDoItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsRequest* /*request*/, ::messenger::GetToDoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetToDoItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNewToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNewToDoItems() {
      ::grpc::Service::MarkMethodRawCallback(42,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetNewToDoItems(context, request); }));
    }
    ~WithRawCallbackMethod_GetNewToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNewToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetNewToDoItemsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ToDoItem>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetNewToDoItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendMessage() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::SentMessage, ::messenger::ChatMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::SentMessage, ::messenger::ChatMessage>* streamer) {
                       return this->StreamedSendMessage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::messenger::SentMessage* /*request*/, ::messenger::ChatMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendMessage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::SentMessage,::messenger::ChatMessage>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateGroupChat() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GroupChat, ::messenger::GroupChat>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GroupChat, ::messenger::GroupChat>* streamer) {
                       return this->StreamedCreateGroupChat(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateGroupChat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GroupChat,::messenger::GroupChat>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateGroupChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateGroupChat() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GroupChat, ::messenger::GroupChat>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GroupChat, ::messenger::GroupChat>* streamer) {
                       return this->StreamedUpdateGroupChat(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateGroupChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateGroupChat(::grpc::ServerContext* /*context*/, const ::messenger::GroupChat* /*request*/, ::messenger::GroupChat* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateGroupChat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GroupChat,::messenger::GroupChat>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AssignRoleToUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AssignRoleToUser() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::Role, ::messenger::Role>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::Role, ::messenger::Role>* streamer) {
                       return this->StreamedAssignRoleToUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AssignRoleToUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AssignRoleToUser(::grpc::ServerContext* /*context*/, const ::messenger::Role* /*request*/, ::messenger::Role* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAssignRoleToUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::Role,::messenger::Role>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateReminder() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::Reminder, ::messenger::Reminder>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::Reminder, ::messenger::Reminder>* streamer) {
                       return this->StreamedCreateReminder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateReminder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::Reminder,::messenger::Reminder>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MarkToDoItemCompleted : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MarkToDoItemCompleted() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::ToDoItem, ::messenger::ToDoItem>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::ToDoItem, ::messenger::ToDoItem>* streamer) {
                       return this->StreamedMarkToDoItemCompleted(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MarkToDoItemCompleted() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MarkToDoItemCompleted(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMarkToDoItemCompleted(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::ToDoItem,::messenger::ToDoItem>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::DeleteMessageRequest, ::messenger::DeleteMessageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::DeleteMessageRequest, ::messenger::DeleteMessageResponse>* streamer) {
                       return this->StreamedDeleteMessage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::messenger::DeleteMessageRequest* /*request*/, ::messenger::DeleteMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteMessage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::DeleteMessageRequest,::messenger::DeleteMessageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EditMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EditMessage() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::EditMessageRequest, ::messenger::EditMessageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::EditMessageRequest, ::messenger::EditMessageResponse>* streamer) {
                       return this->StreamedEditMessage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_EditMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EditMessage(::grpc::ServerContext* /*context*/, const ::messenger::EditMessageRequest* /*request*/, ::messenger::EditMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEditMessage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::EditMessageRequest,::messenger::EditMessageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Register() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::RegisterRequest, ::messenger::RegisterResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::RegisterRequest, ::messenger::RegisterResponse>* streamer) {
                       return this->StreamedRegister(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::messenger::RegisterRequest* /*request*/, ::messenger::RegisterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegister(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::RegisterRequest,::messenger::RegisterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Login() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::LoginRequest, ::messenger::LoginResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::LoginRequest, ::messenger::LoginResponse>* streamer) {
                       return this->StreamedLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::messenger::LoginRequest* /*request*/, ::messenger::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::LoginRequest,::messenger::LoginResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Logout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Logout() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::LogoutRequest, ::messenger::LogoutResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::LogoutRequest, ::messenger::LogoutResponse>* streamer) {
                       return this->StreamedLogout(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Logout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Logout(::grpc::ServerContext* /*context*/, const ::messenger::LogoutRequest* /*request*/, ::messenger::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogout(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::LogoutRequest,::messenger::LogoutResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::UpdateUserProfileRequest, ::messenger::UpdateUserProfileResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::UpdateUserProfileRequest, ::messenger::UpdateUserProfileResponse>* streamer) {
                       return this->StreamedUpdateUserProfile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::messenger::UpdateUserProfileRequest* /*request*/, ::messenger::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateUserProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::UpdateUserProfileRequest,::messenger::UpdateUserProfileResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::UpdateMessageStatusRequest, ::messenger::UpdateMessageStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::UpdateMessageStatusRequest, ::messenger::UpdateMessageStatusResponse>* streamer) {
                       return this->StreamedUpdateMessageStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::messenger::UpdateMessageStatusRequest* /*request*/, ::messenger::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateMessageStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::UpdateMessageStatusRequest,::messenger::UpdateMessageStatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddContact() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::AddContactRequest, ::messenger::AddContactResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::AddContactRequest, ::messenger::AddContactResponse>* streamer) {
                       return this->StreamedAddContact(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddContact(::grpc::ServerContext* /*context*/, const ::messenger::AddContactRequest* /*request*/, ::messenger::AddContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddContact(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::AddContactRequest,::messenger::AddContactResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveContact() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::RemoveContactRequest, ::messenger::RemoveContactResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::RemoveContactRequest, ::messenger::RemoveContactResponse>* streamer) {
                       return this->StreamedRemoveContact(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveContact(::grpc::ServerContext* /*context*/, const ::messenger::RemoveContactRequest* /*request*/, ::messenger::RemoveContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveContact(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::RemoveContactRequest,::messenger::RemoveContactResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateChatFolder() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::CreateChatFolderRequest, ::messenger::CreateChatFolderResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::CreateChatFolderRequest, ::messenger::CreateChatFolderResponse>* streamer) {
                       return this->StreamedCreateChatFolder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::CreateChatFolderRequest* /*request*/, ::messenger::CreateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateChatFolder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::CreateChatFolderRequest,::messenger::CreateChatFolderResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateChatFolder() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::UpdateChatFolderRequest, ::messenger::UpdateChatFolderResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::UpdateChatFolderRequest, ::messenger::UpdateChatFolderResponse>* streamer) {
                       return this->StreamedUpdateChatFolder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::UpdateChatFolderRequest* /*request*/, ::messenger::UpdateChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateChatFolder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::UpdateChatFolderRequest,::messenger::UpdateChatFolderResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteChatFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteChatFolder() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::DeleteChatFolderRequest, ::messenger::DeleteChatFolderResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::DeleteChatFolderRequest, ::messenger::DeleteChatFolderResponse>* streamer) {
                       return this->StreamedDeleteChatFolder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteChatFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteChatFolder(::grpc::ServerContext* /*context*/, const ::messenger::DeleteChatFolderRequest* /*request*/, ::messenger::DeleteChatFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteChatFolder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::DeleteChatFolderRequest,::messenger::DeleteChatFolderResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFoldersOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFoldersOffset() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GetFoldersOffsetRequest, ::messenger::GetFoldersOffsetResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GetFoldersOffsetRequest, ::messenger::GetFoldersOffsetResponse>* streamer) {
                       return this->StreamedGetFoldersOffset(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFoldersOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFoldersOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersOffsetRequest* /*request*/, ::messenger::GetFoldersOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFoldersOffset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GetFoldersOffsetRequest,::messenger::GetFoldersOffsetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFolders() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GetFoldersRequest, ::messenger::GetFoldersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GetFoldersRequest, ::messenger::GetFoldersResponse>* streamer) {
                       return this->StreamedGetFolders(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetFoldersRequest* /*request*/, ::messenger::GetFoldersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFolders(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GetFoldersRequest,::messenger::GetFoldersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddChatToFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddChatToFolder() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::AddChatToFolderRequest, ::messenger::AddChatToFolderResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::AddChatToFolderRequest, ::messenger::AddChatToFolderResponse>* streamer) {
                       return this->StreamedAddChatToFolder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddChatToFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddChatToFolder(::grpc::ServerContext* /*context*/, const ::messenger::AddChatToFolderRequest* /*request*/, ::messenger::AddChatToFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddChatToFolder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::AddChatToFolderRequest,::messenger::AddChatToFolderResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveChatFromFolder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveChatFromFolder() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::RemoveChatFromFolderRequest, ::messenger::RemoveChatFromFolderResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::RemoveChatFromFolderRequest, ::messenger::RemoveChatFromFolderResponse>* streamer) {
                       return this->StreamedRemoveChatFromFolder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveChatFromFolder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveChatFromFolder(::grpc::ServerContext* /*context*/, const ::messenger::RemoveChatFromFolderRequest* /*request*/, ::messenger::RemoveChatFromFolderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveChatFromFolder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::RemoveChatFromFolderRequest,::messenger::RemoveChatFromFolderResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddGroupMember() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::AddGroupMemberRequest, ::messenger::AddGroupMemberResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::AddGroupMemberRequest, ::messenger::AddGroupMemberResponse>* streamer) {
                       return this->StreamedAddGroupMember(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::AddGroupMemberRequest* /*request*/, ::messenger::AddGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddGroupMember(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::AddGroupMemberRequest,::messenger::AddGroupMemberResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveGroupMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveGroupMember() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::RemoveGroupMemberRequest, ::messenger::RemoveGroupMemberResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::RemoveGroupMemberRequest, ::messenger::RemoveGroupMemberResponse>* streamer) {
                       return this->StreamedRemoveGroupMember(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveGroupMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveGroupMember(::grpc::ServerContext* /*context*/, const ::messenger::RemoveGroupMemberRequest* /*request*/, ::messenger::RemoveGroupMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveGroupMember(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::RemoveGroupMemberRequest,::messenger::RemoveGroupMemberResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMessagesOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMessagesOffset() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GetMessagesOffsetRequest, ::messenger::GetMessagesOffsetResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GetMessagesOffsetRequest, ::messenger::GetMessagesOffsetResponse>* streamer) {
                       return this->StreamedGetMessagesOffset(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMessagesOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMessagesOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesOffsetRequest* /*request*/, ::messenger::GetMessagesOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMessagesOffset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GetMessagesOffsetRequest,::messenger::GetMessagesOffsetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMessagesConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMessagesConversion() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GetMessagesConversionRequest, ::messenger::GetMessagesConversionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GetMessagesConversionRequest, ::messenger::GetMessagesConversionResponse>* streamer) {
                       return this->StreamedGetMessagesConversion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMessagesConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMessagesConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetMessagesConversionRequest* /*request*/, ::messenger::GetMessagesConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMessagesConversion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GetMessagesConversionRequest,::messenger::GetMessagesConversionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetGroupChatsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetGroupChatsOffset() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GetGroupChatsOffsetRequest, ::messenger::GetGroupChatsOffsetResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GetGroupChatsOffsetRequest, ::messenger::GetGroupChatsOffsetResponse>* streamer) {
                       return this->StreamedGetGroupChatsOffset(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetGroupChatsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGroupChatsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsOffsetRequest* /*request*/, ::messenger::GetGroupChatsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetGroupChatsOffset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GetGroupChatsOffsetRequest,::messenger::GetGroupChatsOffsetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetGroupChatsConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetGroupChatsConversion() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GetGroupChatsConversionRequest, ::messenger::GetGroupChatsConversionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GetGroupChatsConversionRequest, ::messenger::GetGroupChatsConversionResponse>* streamer) {
                       return this->StreamedGetGroupChatsConversion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetGroupChatsConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGroupChatsConversion(::grpc::ServerContext* /*context*/, const ::messenger::GetGroupChatsConversionRequest* /*request*/, ::messenger::GetGroupChatsConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetGroupChatsConversion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GetGroupChatsConversionRequest,::messenger::GetGroupChatsConversionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendFile() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::FileMessage, ::messenger::FileMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::FileMessage, ::messenger::FileMessage>* streamer) {
                       return this->StreamedSendFile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendFile(::grpc::ServerContext* /*context*/, const ::messenger::FileMessage* /*request*/, ::messenger::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::FileMessage,::messenger::FileMessage>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SearchMessages() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::SearchRequest, ::messenger::SearchMessagesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::SearchRequest, ::messenger::SearchMessagesResponse>* streamer) {
                       return this->StreamedSearchMessages(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchMessages(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::SearchRequest,::messenger::SearchMessagesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SearchChats() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::SearchRequest, ::messenger::SearchChatsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::SearchRequest, ::messenger::SearchChatsResponse>* streamer) {
                       return this->StreamedSearchChats(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SearchChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchChats(::grpc::ServerContext* /*context*/, const ::messenger::SearchRequest* /*request*/, ::messenger::SearchChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchChats(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::SearchRequest,::messenger::SearchChatsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateReminder() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::Reminder, ::messenger::Reminder>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::Reminder, ::messenger::Reminder>* streamer) {
                       return this->StreamedUpdateReminder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateReminder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::Reminder,::messenger::Reminder>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteReminder() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::Reminder, ::messenger::Reminder>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::Reminder, ::messenger::Reminder>* streamer) {
                       return this->StreamedDeleteReminder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteReminder(::grpc::ServerContext* /*context*/, const ::messenger::Reminder* /*request*/, ::messenger::Reminder* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteReminder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::Reminder,::messenger::Reminder>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateNotificationSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateNotificationSettings() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::UpdateNotificationSettingsRequest, ::messenger::UpdateNotificationSettingsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::UpdateNotificationSettingsRequest, ::messenger::UpdateNotificationSettingsResponse>* streamer) {
                       return this->StreamedUpdateNotificationSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateNotificationSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateNotificationSettings(::grpc::ServerContext* /*context*/, const ::messenger::UpdateNotificationSettingsRequest* /*request*/, ::messenger::UpdateNotificationSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateNotificationSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::UpdateNotificationSettingsRequest,::messenger::UpdateNotificationSettingsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateToDoItem() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::ToDoItem, ::messenger::ToDoItem>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::ToDoItem, ::messenger::ToDoItem>* streamer) {
                       return this->StreamedCreateToDoItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateToDoItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::ToDoItem,::messenger::ToDoItem>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateToDoItem() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::ToDoItem, ::messenger::ToDoItem>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::ToDoItem, ::messenger::ToDoItem>* streamer) {
                       return this->StreamedUpdateToDoItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateToDoItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::ToDoItem,::messenger::ToDoItem>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteToDoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteToDoItem() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::ToDoItem, ::messenger::ToDoItem>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::ToDoItem, ::messenger::ToDoItem>* streamer) {
                       return this->StreamedDeleteToDoItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteToDoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteToDoItem(::grpc::ServerContext* /*context*/, const ::messenger::ToDoItem* /*request*/, ::messenger::ToDoItem* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteToDoItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::ToDoItem,::messenger::ToDoItem>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetToDoItemsOffset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetToDoItemsOffset() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GetToDoItemsOffsetRequest, ::messenger::GetToDoItemsOffsetResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GetToDoItemsOffsetRequest, ::messenger::GetToDoItemsOffsetResponse>* streamer) {
                       return this->StreamedGetToDoItemsOffset(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetToDoItemsOffset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetToDoItemsOffset(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsOffsetRequest* /*request*/, ::messenger::GetToDoItemsOffsetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetToDoItemsOffset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GetToDoItemsOffsetRequest,::messenger::GetToDoItemsOffsetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetToDoItems() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler<
          ::messenger::GetToDoItemsRequest, ::messenger::GetToDoItemsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::messenger::GetToDoItemsRequest, ::messenger::GetToDoItemsResponse>* streamer) {
                       return this->StreamedGetToDoItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetToDoItemsRequest* /*request*/, ::messenger::GetToDoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetToDoItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::messenger::GetToDoItemsRequest,::messenger::GetToDoItemsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SendMessage<WithStreamedUnaryMethod_CreateGroupChat<WithStreamedUnaryMethod_UpdateGroupChat<WithStreamedUnaryMethod_AssignRoleToUser<WithStreamedUnaryMethod_CreateReminder<WithStreamedUnaryMethod_MarkToDoItemCompleted<WithStreamedUnaryMethod_DeleteMessage<WithStreamedUnaryMethod_EditMessage<WithStreamedUnaryMethod_Register<WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_Logout<WithStreamedUnaryMethod_UpdateUserProfile<WithStreamedUnaryMethod_UpdateMessageStatus<WithStreamedUnaryMethod_AddContact<WithStreamedUnaryMethod_RemoveContact<WithStreamedUnaryMethod_CreateChatFolder<WithStreamedUnaryMethod_UpdateChatFolder<WithStreamedUnaryMethod_DeleteChatFolder<WithStreamedUnaryMethod_GetFoldersOffset<WithStreamedUnaryMethod_GetFolders<WithStreamedUnaryMethod_AddChatToFolder<WithStreamedUnaryMethod_RemoveChatFromFolder<WithStreamedUnaryMethod_AddGroupMember<WithStreamedUnaryMethod_RemoveGroupMember<WithStreamedUnaryMethod_GetMessagesOffset<WithStreamedUnaryMethod_GetMessagesConversion<WithStreamedUnaryMethod_GetGroupChatsOffset<WithStreamedUnaryMethod_GetGroupChatsConversion<WithStreamedUnaryMethod_SendFile<WithStreamedUnaryMethod_SearchMessages<WithStreamedUnaryMethod_SearchChats<WithStreamedUnaryMethod_UpdateReminder<WithStreamedUnaryMethod_DeleteReminder<WithStreamedUnaryMethod_UpdateNotificationSettings<WithStreamedUnaryMethod_CreateToDoItem<WithStreamedUnaryMethod_UpdateToDoItem<WithStreamedUnaryMethod_DeleteToDoItem<WithStreamedUnaryMethod_GetToDoItemsOffset<WithStreamedUnaryMethod_GetToDoItems<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetNewFolders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetNewFolders() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::messenger::GetNewFoldersRequest, ::messenger::ChatFolder>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::messenger::GetNewFoldersRequest, ::messenger::ChatFolder>* streamer) {
                       return this->StreamedGetNewFolders(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetNewFolders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNewFolders(::grpc::ServerContext* /*context*/, const ::messenger::GetNewFoldersRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatFolder>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetNewFolders(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::messenger::GetNewFoldersRequest,::messenger::ChatFolder>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetNewMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetNewMessages() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::messenger::GetNewMessagesRequest, ::messenger::ChatMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::messenger::GetNewMessagesRequest, ::messenger::ChatMessage>* streamer) {
                       return this->StreamedGetNewMessages(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetNewMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNewMessages(::grpc::ServerContext* /*context*/, const ::messenger::GetNewMessagesRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ChatMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetNewMessages(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::messenger::GetNewMessagesRequest,::messenger::ChatMessage>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetNewGroupChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetNewGroupChats() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::messenger::GetNewGroupChatsRequest, ::messenger::GroupChat>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::messenger::GetNewGroupChatsRequest, ::messenger::GroupChat>* streamer) {
                       return this->StreamedGetNewGroupChats(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetNewGroupChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNewGroupChats(::grpc::ServerContext* /*context*/, const ::messenger::GetNewGroupChatsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::GroupChat>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetNewGroupChats(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::messenger::GetNewGroupChatsRequest,::messenger::GroupChat>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetNewToDoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetNewToDoItems() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::messenger::GetNewToDoItemsRequest, ::messenger::ToDoItem>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::messenger::GetNewToDoItemsRequest, ::messenger::ToDoItem>* streamer) {
                       return this->StreamedGetNewToDoItems(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetNewToDoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNewToDoItems(::grpc::ServerContext* /*context*/, const ::messenger::GetNewToDoItemsRequest* /*request*/, ::grpc::ServerWriter< ::messenger::ToDoItem>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetNewToDoItems(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::messenger::GetNewToDoItemsRequest,::messenger::ToDoItem>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetNewFolders<WithSplitStreamingMethod_GetNewMessages<WithSplitStreamingMethod_GetNewGroupChats<WithSplitStreamingMethod_GetNewToDoItems<Service > > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_SendMessage<WithStreamedUnaryMethod_CreateGroupChat<WithStreamedUnaryMethod_UpdateGroupChat<WithStreamedUnaryMethod_AssignRoleToUser<WithStreamedUnaryMethod_CreateReminder<WithStreamedUnaryMethod_MarkToDoItemCompleted<WithStreamedUnaryMethod_DeleteMessage<WithStreamedUnaryMethod_EditMessage<WithStreamedUnaryMethod_Register<WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_Logout<WithStreamedUnaryMethod_UpdateUserProfile<WithStreamedUnaryMethod_UpdateMessageStatus<WithStreamedUnaryMethod_AddContact<WithStreamedUnaryMethod_RemoveContact<WithStreamedUnaryMethod_CreateChatFolder<WithStreamedUnaryMethod_UpdateChatFolder<WithStreamedUnaryMethod_DeleteChatFolder<WithStreamedUnaryMethod_GetFoldersOffset<WithStreamedUnaryMethod_GetFolders<WithSplitStreamingMethod_GetNewFolders<WithStreamedUnaryMethod_AddChatToFolder<WithStreamedUnaryMethod_RemoveChatFromFolder<WithStreamedUnaryMethod_AddGroupMember<WithStreamedUnaryMethod_RemoveGroupMember<WithStreamedUnaryMethod_GetMessagesOffset<WithStreamedUnaryMethod_GetMessagesConversion<WithSplitStreamingMethod_GetNewMessages<WithStreamedUnaryMethod_GetGroupChatsOffset<WithStreamedUnaryMethod_GetGroupChatsConversion<WithSplitStreamingMethod_GetNewGroupChats<WithStreamedUnaryMethod_SendFile<WithStreamedUnaryMethod_SearchMessages<WithStreamedUnaryMethod_SearchChats<WithStreamedUnaryMethod_UpdateReminder<WithStreamedUnaryMethod_DeleteReminder<WithStreamedUnaryMethod_UpdateNotificationSettings<WithStreamedUnaryMethod_CreateToDoItem<WithStreamedUnaryMethod_UpdateToDoItem<WithStreamedUnaryMethod_DeleteToDoItem<WithStreamedUnaryMethod_GetToDoItemsOffset<WithStreamedUnaryMethod_GetToDoItems<WithSplitStreamingMethod_GetNewToDoItems<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace messenger


#endif  // GRPC_messenger_2eproto__INCLUDED
